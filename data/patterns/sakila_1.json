[
    {
        "original_nl": "How many different last names do the actors and actresses have?",
        "generalized_nl": "How|many|different|{COLUMN} [last names]|do|the|{TABLE} [actors]|and|actress [actresses]|have",
        "generalized_tokens": [
            "How",
            "many",
            "different",
            "{COLUMN}",
            "do",
            "the",
            "{TABLE}",
            "and",
            "actress",
            "have"
        ],
        "original_sql": "SELECT count(DISTINCT last_name) FROM actor"
    },
    {
        "original_nl": "Count the number of different last names actors have.",
        "generalized_nl": "count [Count]|the|number|of|different|{COLUMN} [last names]|{TABLE} [actors]|have",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "different",
            "{COLUMN}",
            "{TABLE}",
            "have"
        ],
        "original_sql": "SELECT count(DISTINCT last_name) FROM actor"
    },
    {
        "original_nl": "What is the most popular first name of the actors?",
        "generalized_nl": "What|is|the|most|popular|{COLUMN} [first name]|of|the|{TABLE} [actors]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "most",
            "popular",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}"
        ],
        "original_sql": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the most common first name among all actors.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|most|common|{COLUMN} [first name]|among|all|{TABLE} [actors]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "most",
            "common",
            "{COLUMN}",
            "among",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the most popular full name of the actors?",
        "generalized_nl": "What|is|the|most|popular|full|{COLUMN} [name]|of|the|{TABLE} [actors]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "most",
            "popular",
            "full",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}"
        ],
        "original_sql": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the most common full name among all actors.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|most|common|full|{COLUMN} [name]|among|all|{TABLE} [actors]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "most",
            "common",
            "full",
            "{COLUMN}",
            "among",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Which districts have at least two addresses?",
        "generalized_nl": "Which|{COLUMN} [districts]|have|{NUMBER} [at least two]|{COLUMN} [addresses]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "have",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
    },
    {
        "original_nl": "Give the districts which have two or more addresses.",
        "generalized_nl": "give [Give]|the|{COLUMN} [districts]|which|have|{NUMBER} [two]|or|more|{COLUMN} [addresses]",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN}",
            "which",
            "have",
            "{NUMBER}",
            "or",
            "more",
            "{COLUMN}"
        ],
        "original_sql": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
    },
    {
        "original_nl": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?",
        "generalized_nl": "What|is|the|{COLUMN} [phone]|number|and|{COLUMN} [postal code]|of|{NE} [the address 1031 Daugavpils Parkway]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "number",
            "and",
            "{COLUMN}",
            "of",
            "{NE}"
        ],
        "original_sql": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'"
    },
    {
        "original_nl": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.",
        "generalized_nl": "give [Give]|the|{COLUMN} [phone]|and|{COLUMN} [postal code]|match [corresponding]|to|the|{COLUMN} [address]|{NE} [1031 Daugavpils Parkway]",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "match",
            "to",
            "the",
            "{COLUMN}",
            "{NE}"
        ],
        "original_sql": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'"
    },
    {
        "original_nl": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?",
        "generalized_nl": "What|are|the|{COLUMN} [city]|{COLUMN} [name]|{COLUMN_PART} [id]|and|number|of|{COLUMN} [addresses]|match [corresponding]|to|the|{COLUMN} [city]|with|the|most|address [addressed]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "{COLUMN}",
            "{COLUMN_PART}",
            "and",
            "number",
            "of",
            "{COLUMN}",
            "match",
            "to",
            "the",
            "{COLUMN}",
            "with",
            "the",
            "most",
            "address"
        ],
        "original_sql": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "How many addresses are in the district of California?",
        "generalized_nl": "How|many|{COLUMN} [addresses]|are|in|the|{COLUMN} [district]|of|{NE} [California]",
        "generalized_tokens": [
            "How",
            "many",
            "{COLUMN}",
            "are",
            "in",
            "the",
            "{COLUMN}",
            "of",
            "{NE}"
        ],
        "original_sql": "SELECT count(*) FROM address WHERE district  =  'California'"
    },
    {
        "original_nl": "Count the number of addressed in the California district.",
        "generalized_nl": "count [Count]|the|number|of|address [addressed]|in|the|{NE} [California]|{COLUMN} [district]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "address",
            "in",
            "the",
            "{NE}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(*) FROM address WHERE district  =  'California'"
    },
    {
        "original_nl": "What are the title and id of the film which has a rental rate of 0.99 and an inventory of below 3?",
        "generalized_nl": "What|are|the|{COLUMN} [title]|and|{COLUMN_PART} [id]|of|the|{TABLE} [film]|which|have [has]|a|{COLUMN} [rental rate]|of|{NUMBER} [0.99]|and|an|{TABLE} [inventory]|of|below|{NUMBER} [3]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "which",
            "have",
            "a",
            "{COLUMN}",
            "of",
            "{NUMBER}",
            "and",
            "an",
            "{TABLE}",
            "of",
            "below",
            "{NUMBER}"
        ],
        "original_sql": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"
    },
    {
        "original_nl": "How many cities are in Australia?",
        "generalized_nl": "How|many|{COLUMN} [cities]|are|in|{NE} [Australia]",
        "generalized_tokens": [
            "How",
            "many",
            "{COLUMN}",
            "are",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'"
    },
    {
        "original_nl": "Count the number of cities in Australia.",
        "generalized_nl": "count [Count]|the|number|of|{COLUMN} [cities]|in|{NE} [Australia]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{COLUMN}",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'"
    },
    {
        "original_nl": "Which countries have at least 3 cities?",
        "generalized_nl": "Which|{COLUMN} [countries]|have|{NUMBER} [at least 3]|{COLUMN} [cities]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "have",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"
    },
    {
        "original_nl": "What are the countries that contain 3 or more cities?",
        "generalized_nl": "What|are|the|{COLUMN} [countries]|that|contain|{NUMBER} [3]|or|more|{COLUMN} [cities]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "that",
            "contain",
            "{NUMBER}",
            "or",
            "more",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"
    },
    {
        "original_nl": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa.",
        "generalized_nl": "find [Find]|all|the|{COLUMN} [payment dates]|for|the|{TABLE} [payments]|with|an|{COLUMN} [amount]|{NUMBER} [larger than 10]|and|the|{TABLE} [payments]|handle [handled]|by|a|{TABLE} [staff]|person|with|the|{COLUMN} [first name]|{NE} [Elsa]",
        "generalized_tokens": [
            "find",
            "all",
            "the",
            "{COLUMN}",
            "for",
            "the",
            "{TABLE}",
            "with",
            "an",
            "{COLUMN}",
            "{NUMBER}",
            "and",
            "the",
            "{TABLE}",
            "handle",
            "by",
            "a",
            "{TABLE}",
            "person",
            "with",
            "the",
            "{COLUMN}",
            "{NE}"
        ],
        "original_sql": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"
    },
    {
        "original_nl": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?",
        "generalized_nl": "What|are|the|{COLUMN} [payment dates]|for|any|{TABLE} [payments]|that|have|an|{COLUMN} [amount]|{NUMBER} [greater than 10]|or|were|handle [handled]|by|a|{TABLE} [staff]|member|with|the|{COLUMN} [first name]|{NE} [Elsa]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "for",
            "any",
            "{TABLE}",
            "that",
            "have",
            "an",
            "{COLUMN}",
            "{NUMBER}",
            "or",
            "were",
            "handle",
            "by",
            "a",
            "{TABLE}",
            "member",
            "with",
            "the",
            "{COLUMN}",
            "{NE}"
        ],
        "original_sql": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"
    },
    {
        "original_nl": "How many customers have an active value of 1?",
        "generalized_nl": "How|many|{TABLE} [customers]|have|an|{COLUMN} [active]|value|of|{NUMBER} [1]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "have",
            "an",
            "{COLUMN}",
            "value",
            "of",
            "{NUMBER}"
        ],
        "original_sql": "SELECT count(*) FROM customer WHERE active = '1'"
    },
    {
        "original_nl": "Count the number of customers who are active.",
        "generalized_nl": "count [Count]|the|number|of|{TABLE} [customers]|who|are|{COLUMN} [active]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{TABLE}",
            "who",
            "are",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(*) FROM customer WHERE active = '1'"
    },
    {
        "original_nl": "What are the title and rental rate of the film with the highest rental rate?",
        "generalized_nl": "What|are|the|{COLUMN} [title]|and|{COLUMN} [rental rate]|of|the|{TABLE} [film]|with|the|high [highest]|{COLUMN} [rental rate]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "high",
            "{COLUMN}"
        ],
        "original_sql": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"
    },
    {
        "original_nl": "What are the title, id, and description of the movie with the greatest number of actors?",
        "generalized_nl": "What|are|the|{COLUMN} [title]|{COLUMN_PART} [id]|and|{COLUMN} [description]|of|the|movie|with|the|great [greatest]|number|of|{TABLE} [actors]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "{COLUMN_PART}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "movie",
            "with",
            "the",
            "great",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the full name and id of the actor or actress who starred in the greatest number of films.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|full|{COLUMN} [name]|and|{COLUMN_PART} [id]|of|the|{TABLE} [actor]|or|actress|who|star [starred]|in|the|great [greatest]|number|of|{TABLE} [films]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "full",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "or",
            "actress",
            "who",
            "star",
            "in",
            "the",
            "great",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What are the full names of actors who had roles in more than 30 films?",
        "generalized_nl": "What|are|the|full|{COLUMN} [names]|of|{TABLE} [actors]|who|have [had]|function [roles]|in|{NUMBER} [more than 30]|{TABLE} [films]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "full",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "function",
            "in",
            "{NUMBER}",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"
    },
    {
        "original_nl": "Which store owns most items?",
        "generalized_nl": "Which|{TABLE} [store]|own [owns]|most|item [items]",
        "generalized_tokens": [
            "Which",
            "{TABLE}",
            "own",
            "most",
            "item"
        ],
        "original_sql": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the id of the store that has the most items in inventory?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|of|the|{TABLE} [store]|that|have [has]|the|most|item [items]|in|{TABLE} [inventory]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "have",
            "the",
            "most",
            "item",
            "in",
            "{TABLE}"
        ],
        "original_sql": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the total amount of all payments?",
        "generalized_nl": "What|is|the|entire [total]|{COLUMN} [amount]|of|all|{TABLE} [payments]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "entire",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT sum(amount) FROM payment"
    },
    {
        "original_nl": "Return the sum of all payment amounts.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|sum|of|all|{TABLE} [payment]|{COLUMN} [amounts]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "sum",
            "of",
            "all",
            "{TABLE}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT sum(amount) FROM payment"
    },
    {
        "original_nl": "What is the full name and id of the customer who has the lowest total amount of payment?",
        "generalized_nl": "What|is|the|full|{COLUMN} [name]|and|{COLUMN_PART} [id]|of|the|{TABLE} [customer]|who|have [has]|the|low [lowest]|entire [total]|{COLUMN} [amount]|of|{TABLE} [payment]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "full",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "have",
            "the",
            "low",
            "entire",
            "{COLUMN}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"
    },
    {
        "original_nl": "What is the genre name of the film HUNGER ROOF?",
        "generalized_nl": "What|is|the|genre|{COLUMN} [name]|of|the|{TABLE} [film]|HUNGER|roof [ROOF]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "genre",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "HUNGER",
            "roof"
        ],
        "original_sql": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'"
    },
    {
        "original_nl": "Return the name of the category to which the film 'HUNGER ROOF' belongs.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [name]|of|the|{TABLE} [category]|to|which|the|{TABLE} [film]|HUNGER|ROOF|belong [belongs]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "to",
            "which",
            "the",
            "{TABLE}",
            "HUNGER",
            "ROOF",
            "belong"
        ],
        "original_sql": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'"
    },
    {
        "original_nl": "What are the names and ids of the different categories, and how many films are in each?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|and|{COLUMN_PART} [ids]|of|the|different|{TABLE} [categories]|and|how|many|{TABLE} [films]|are|in|each",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "different",
            "{TABLE}",
            "and",
            "how",
            "many",
            "{TABLE}",
            "are",
            "in",
            "each"
        ],
        "original_sql": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"
    },
    {
        "original_nl": "What is the title and id of the film that has the greatest number of copies in inventory?",
        "generalized_nl": "What|is|the|{COLUMN} [title]|and|{COLUMN_PART} [id]|of|the|{TABLE} [film]|that|have [has]|the|great [greatest]|number|of|copy [copies]|in|{TABLE} [inventory]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "have",
            "the",
            "great",
            "number",
            "of",
            "copy",
            "in",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the film title and inventory id of the item in the inventory which was rented most frequently?",
        "generalized_nl": "What|is|the|{TABLE} [film]|{COLUMN} [title]|and|{COLUMN} [inventory id]|of|the|item|in|the|{TABLE} [inventory]|which|was|rent [rented]|most|frequently",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{TABLE}",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "item",
            "in",
            "the",
            "{TABLE}",
            "which",
            "was",
            "rent",
            "most",
            "frequently"
        ],
        "original_sql": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the title and inventory id of the film that is rented most often.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [title]|and|{COLUMN} [inventory id]|of|the|{TABLE} [film]|that|is|rent [rented]|most|frequently [often]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "is",
            "rent",
            "most",
            "frequently"
        ],
        "original_sql": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "How many languages are in these films?",
        "generalized_nl": "How|many|{TABLE} [languages]|are|in|these|{TABLE} [films]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "are",
            "in",
            "these",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(DISTINCT language_id) FROM film"
    },
    {
        "original_nl": "Count the number of different languages in these films.",
        "generalized_nl": "count [Count]|the|number|of|different|{TABLE} [languages]|in|these|{TABLE} [films]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "different",
            "{TABLE}",
            "in",
            "these",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(DISTINCT language_id) FROM film"
    },
    {
        "original_nl": "Return the titles of any movies with an R rating.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [titles]|of|any|movie [movies]|with|an|roentgen [R]|{COLUMN} [rating]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "of",
            "any",
            "movie",
            "with",
            "an",
            "roentgen",
            "{COLUMN}"
        ],
        "original_sql": "SELECT title FROM film WHERE rating  =  'R'"
    },
    {
        "original_nl": "Where is store 1 located?",
        "generalized_nl": "Where|is|{TABLE} [store]|{NUMBER} [1]|locate [located]",
        "generalized_tokens": [
            "Where",
            "is",
            "{TABLE}",
            "{NUMBER}",
            "locate"
        ],
        "original_sql": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"
    },
    {
        "original_nl": "Return the address of store 1.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [address]|of|{TABLE} [store]|{NUMBER} [1]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "{NUMBER}"
        ],
        "original_sql": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"
    },
    {
        "original_nl": "Give the full name and staff id of the staff who has handled the fewest payments.",
        "generalized_nl": "give [Give]|the|full|{COLUMN} [name]|and|{COLUMN} [staff id]|of|the|{TABLE} [staff]|who|has|handle [handled]|the|fewest|{TABLE} [payments]",
        "generalized_tokens": [
            "give",
            "the",
            "full",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "has",
            "handle",
            "the",
            "fewest",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "original_nl": "What is the name of the language that the film 'AIRPORT POLLOCK' is in?",
        "generalized_nl": "What|is|the|{COLUMN} [name]|of|the|{TABLE} [language]|that|the|{TABLE} [film]|AIRPORT|POLLOCK|is|in",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "the",
            "{TABLE}",
            "AIRPORT",
            "POLLOCK",
            "is",
            "in"
        ],
        "original_sql": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'"
    },
    {
        "original_nl": "How many stores are there?",
        "generalized_nl": "How|many|{TABLE} [stores]|are|there",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "are",
            "there"
        ],
        "original_sql": "SELECT count(*) FROM store"
    },
    {
        "original_nl": "Count the number of stores.",
        "generalized_nl": "count [Count]|the|number|of|{TABLE} [stores]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(*) FROM store"
    },
    {
        "original_nl": "How many kinds of different ratings are listed?",
        "generalized_nl": "How|many|kind [kinds]|of|different|{COLUMN} [ratings]|are|list [listed]",
        "generalized_tokens": [
            "How",
            "many",
            "kind",
            "of",
            "different",
            "{COLUMN}",
            "are",
            "list"
        ],
        "original_sql": "SELECT count(DISTINCT rating) FROM film"
    },
    {
        "original_nl": "Count the number of different film ratings.",
        "generalized_nl": "count [Count]|the|number|of|different|{TABLE} [film]|{COLUMN} [ratings]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "different",
            "{TABLE}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(DISTINCT rating) FROM film"
    },
    {
        "original_nl": "Which movies have 'Deleted Scenes' as a substring in the special feature?",
        "generalized_nl": "Which|movie [movies]|have|{NE} [Deleted Scenes ']|as|a|substring|in|the|{COLUMN} [special feature]",
        "generalized_tokens": [
            "Which",
            "movie",
            "have",
            "{NE}",
            "as",
            "a",
            "substring",
            "in",
            "the",
            "{COLUMN}"
        ],
        "original_sql": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"
    },
    {
        "original_nl": "Return the titles of films that include 'Deleted Scenes' in their special feature section.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [titles]|of|{TABLE} [films]|that|include|{NE} [Deleted Scenes ']|in|their|{COLUMN} [special feature]|section",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "that",
            "include",
            "{NE}",
            "in",
            "their",
            "{COLUMN}",
            "section"
        ],
        "original_sql": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"
    },
    {
        "original_nl": "How many items in inventory does store 1 have?",
        "generalized_nl": "How|many|item [items]|in|{TABLE} [inventory]|does|{TABLE} [store]|{NUMBER} [1]|have",
        "generalized_tokens": [
            "How",
            "many",
            "item",
            "in",
            "{TABLE}",
            "does",
            "{TABLE}",
            "{NUMBER}",
            "have"
        ],
        "original_sql": "SELECT count(*) FROM inventory WHERE store_id  =  1"
    },
    {
        "original_nl": "Count the number of items store 1 has in stock.",
        "generalized_nl": "count [Count]|the|number|of|item [items]|{TABLE} [store]|{NUMBER} [1]|have [has]|in|stock",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "item",
            "{TABLE}",
            "{NUMBER}",
            "have",
            "in",
            "stock"
        ],
        "original_sql": "SELECT count(*) FROM inventory WHERE store_id  =  1"
    },
    {
        "original_nl": "When did the first payment happen?",
        "generalized_nl": "When|did|the|{COLUMN_PART} [first]|{TABLE} [payment]|happen",
        "generalized_tokens": [
            "When",
            "did",
            "the",
            "{COLUMN_PART}",
            "{TABLE}",
            "happen"
        ],
        "original_sql": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
    },
    {
        "original_nl": "What was the date of the earliest payment?",
        "generalized_nl": "What|was|the|{COLUMN_PART} [date]|of|the|early [earliest]|{TABLE} [payment]",
        "generalized_tokens": [
            "What",
            "was",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "early",
            "{TABLE}"
        ],
        "original_sql": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
    },
    {
        "original_nl": "Return the address and email of the customer with the first name Linda.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [address]|and|{COLUMN} [email]|of|the|{TABLE} [customer]|with|the|{COLUMN} [first name]|{NE} [Linda]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "{COLUMN}",
            "{NE}"
        ],
        "original_sql": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'"
    },
    {
        "original_nl": "What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|of|{TABLE} [films]|that|are|either|long [longer]|than|{NE} [100 minutes]|or|rat [rated]|{NE} [PG]|other|than|those|that|{COLUMN_PART} [cost]|{NUMBER} [more than 200]|to|replace",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "that",
            "are",
            "either",
            "long",
            "than",
            "{NE}",
            "or",
            "rat",
            "{NE}",
            "other",
            "than",
            "those",
            "that",
            "{COLUMN_PART}",
            "{NUMBER}",
            "to",
            "replace"
        ],
        "original_sql": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"
    },
    {
        "original_nl": "What is the first name and the last name of the customer who made the earliest rental?",
        "generalized_nl": "What|is|the|{COLUMN} [first name]|and|the|{COLUMN} [last name]|of|the|{TABLE} [customer]|who|make [made]|the|early [earliest]|{TABLE} [rental]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "and",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "make",
            "the",
            "early",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"
    },
    {
        "original_nl": "Return the full name of the customer who made the first rental.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|full|{COLUMN} [name]|of|the|{TABLE} [customer]|who|make [made]|the|{COLUMN_PART} [first]|{TABLE} [rental]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "full",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "make",
            "the",
            "{COLUMN_PART}",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"
    },
    {
        "original_nl": "What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns?",
        "generalized_nl": "What|is|the|full|{COLUMN} [name]|of|the|{TABLE} [staff]|member|who|has|rent [rented]|a|{TABLE} [film]|to|a|{TABLE} [customer]|with|the|{COLUMN} [first name]|{NE} [April]|and|the|{COLUMN} [last name]|{NE} [Burns]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "full",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "member",
            "who",
            "has",
            "rent",
            "a",
            "{TABLE}",
            "to",
            "a",
            "{TABLE}",
            "with",
            "the",
            "{COLUMN}",
            "{NE}",
            "and",
            "the",
            "{COLUMN}",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'"
    },
    {
        "original_nl": "Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|full|{COLUMN} [name]|of|the|{TABLE} [staff]|who|provide [provided]|a|{TABLE} [customer]|with|the|{COLUMN} [first name]|{NE} [April]|and|the|{COLUMN} [last name]|{NE} [Burns]|with|a|{TABLE} [film]|{TABLE} [rental]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "full",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "provide",
            "a",
            "{TABLE}",
            "with",
            "the",
            "{COLUMN}",
            "{NE}",
            "and",
            "the",
            "{COLUMN}",
            "{NE}",
            "with",
            "a",
            "{TABLE}",
            "{TABLE}"
        ],
        "original_sql": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'"
    },
    {
        "original_nl": "Which store has most the customers?",
        "generalized_nl": "Which|{TABLE} [store]|have [has]|most|the|{TABLE} [customers]",
        "generalized_tokens": [
            "Which",
            "{TABLE}",
            "have",
            "most",
            "the",
            "{TABLE}"
        ],
        "original_sql": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the id of the store with the most customers.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN_PART} [id]|of|the|{TABLE} [store]|with|the|most|{TABLE} [customers]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "most",
            "{TABLE}"
        ],
        "original_sql": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the largest payment amount?",
        "generalized_nl": "What|is|the|large [largest]|{TABLE} [payment]|{COLUMN} [amount]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "large",
            "{TABLE}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
    },
    {
        "original_nl": "Return the amount of the largest payment.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [amount]|of|the|large [largest]|{TABLE} [payment]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "large",
            "{TABLE}"
        ],
        "original_sql": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
    },
    {
        "original_nl": "Where does the staff member with the first name Elsa live?",
        "generalized_nl": "Where|does|the|{TABLE} [staff]|member|with|the|{COLUMN} [first name]|{NE} [Elsa]|live",
        "generalized_tokens": [
            "Where",
            "does",
            "the",
            "{TABLE}",
            "member",
            "with",
            "the",
            "{COLUMN}",
            "{NE}",
            "live"
        ],
        "original_sql": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"
    },
    {
        "original_nl": "Give the address of the staff member who has the first name Elsa.",
        "generalized_nl": "give [Give]|the|{COLUMN} [address]|of|the|{TABLE} [staff]|member|who|have [has]|the|{COLUMN} [first name]|{NE} [Elsa]",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "member",
            "who",
            "have",
            "the",
            "{COLUMN}",
            "{NE}"
        ],
        "original_sql": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"
    },
    {
        "original_nl": "What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?",
        "generalized_nl": "What|are|the|{COLUMN} [first names]|of|{TABLE} [customers]|who|have|not|rent [rented]|any|{TABLE} [films]|after|{NE} [2005 - 08-23 02:06:01]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "not",
            "rent",
            "any",
            "{TABLE}",
            "after",
            "{NE}"
        ],
        "original_sql": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
    },
    {
        "original_nl": "Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01'.",
        "generalized_nl": "{COLUMN_PART} [Return]|the|{COLUMN} [first names]|of|{TABLE} [customers]|who|did|not|rent [rented]|a|{TABLE} [film]|after|{NE} [the date ' 2005 - 08-23]|{NE} [02:06:01]",
        "generalized_tokens": [
            "{COLUMN_PART}",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "who",
            "did",
            "not",
            "rent",
            "a",
            "{TABLE}",
            "after",
            "{NE}",
            "{NE}"
        ],
        "original_sql": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
    }
]