[
    {
        "original_nl": "How many bookings do we have?",
        "generalized_nl": "How|many|{TABLE} [bookings]|do|we|have",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "do",
            "we",
            "have"
        ],
        "original_sql": "SELECT count(*) FROM BOOKINGS"
    },
    {
        "original_nl": "Count the total number of bookings made.",
        "generalized_nl": "count [Count]|the|entire [total]|number|of|{TABLE} [bookings]|make [made]",
        "generalized_tokens": [
            "count",
            "the",
            "entire",
            "number",
            "of",
            "{TABLE}",
            "make"
        ],
        "original_sql": "SELECT count(*) FROM BOOKINGS"
    },
    {
        "original_nl": "List the order dates of all the bookings.",
        "generalized_nl": "list [List]|the|{COLUMN} [order dates]|of|all|the|{TABLE} [bookings]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "the",
            "{TABLE}"
        ],
        "original_sql": "SELECT Order_Date FROM BOOKINGS"
    },
    {
        "original_nl": "What is the order date of each booking?",
        "generalized_nl": "What|is|the|{COLUMN} [order date]|of|each|{TABLE} [booking]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT Order_Date FROM BOOKINGS"
    },
    {
        "original_nl": "Show all the planned delivery dates and actual delivery dates of bookings.",
        "generalized_nl": "show [Show]|all|the|{COLUMN} [planned delivery dates]|and|{COLUMN} [actual delivery dates]|of|{TABLE} [bookings]",
        "generalized_tokens": [
            "show",
            "all",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
    },
    {
        "original_nl": "What are the planned delivery date and actual delivery date for each booking?",
        "generalized_nl": "What|are|the|{COLUMN} [planned delivery date]|and|{COLUMN} [actual delivery date]|for|each|{TABLE} [booking]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "for",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
    },
    {
        "original_nl": "How many customers do we have?",
        "generalized_nl": "How|many|{TABLE} [customers]|do|we|have",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "do",
            "we",
            "have"
        ],
        "original_sql": "SELECT count(*) FROM CUSTOMERS"
    },
    {
        "original_nl": "Count the number of customers recorded.",
        "generalized_nl": "count [Count]|the|number|of|{TABLE} [customers]|record [recorded]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{TABLE}",
            "record"
        ],
        "original_sql": "SELECT count(*) FROM CUSTOMERS"
    },
    {
        "original_nl": "What are the phone and email for customer Harold?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [phone]|and|{COLUMN_PART} [email]|for|{TABLE} [customer]|{NE} [Harold]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "for",
            "{TABLE}",
            "{NE}"
        ],
        "original_sql": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""
    },
    {
        "original_nl": "Find the phone number and email address of customer \"Harold\".",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [phone]|number|and|{COLUMN_PART} [email]|{TABLE} [address]|of|{TABLE} [customer]|{NE} [Harold]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "number",
            "and",
            "{COLUMN_PART}",
            "{TABLE}",
            "of",
            "{TABLE}",
            "{NE}"
        ],
        "original_sql": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""
    },
    {
        "original_nl": "Show all the Store_Name of drama workshop groups.",
        "generalized_nl": "show [Show]|all|the|{COLUMN} [Store _ Name]|of|{TABLE} [drama workshop groups]",
        "generalized_tokens": [
            "show",
            "all",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT Store_Name FROM Drama_Workshop_Groups"
    },
    {
        "original_nl": "What are the store names of drama workshop groups?",
        "generalized_nl": "What|are|the|{COLUMN} [store names]|of|{TABLE} [drama workshop groups]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT Store_Name FROM Drama_Workshop_Groups"
    },
    {
        "original_nl": "Show the minimum, average, maximum order quantity of all invoices.",
        "generalized_nl": "show [Show]|the|minimal [minimum]|average|maximal [maximum]|{COLUMN} [order quantity]|of|all|{TABLE} [invoices]",
        "generalized_tokens": [
            "show",
            "the",
            "minimal",
            "average",
            "maximal",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
    },
    {
        "original_nl": "What are the distinct payment method codes in all the invoices?",
        "generalized_nl": "What|are|the|distinct|{COLUMN} [payment method codes]|in|all|the|{TABLE} [invoices]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN}",
            "in",
            "all",
            "the",
            "{TABLE}"
        ],
        "original_sql": "SELECT DISTINCT payment_method_code FROM INVOICES"
    },
    {
        "original_nl": "Show me the distinct payment method codes from the invoice record.",
        "generalized_nl": "show [Show]|me|the|distinct|{COLUMN} [payment method codes]|from|the|{TABLE} [invoice]|record",
        "generalized_tokens": [
            "show",
            "me",
            "the",
            "distinct",
            "{COLUMN}",
            "from",
            "the",
            "{TABLE}",
            "record"
        ],
        "original_sql": "SELECT DISTINCT payment_method_code FROM INVOICES"
    },
    {
        "original_nl": "What is the description of the marketing region China?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [description]|of|the|{TABLE} [marketing region]|{NE} [China]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{NE}"
        ],
        "original_sql": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
    },
    {
        "original_nl": "Find the marketing region description of China?",
        "generalized_nl": "find [Find]|the|{TABLE} [marketing region]|{COLUMN_PART} [description]|of|{NE} [China]",
        "generalized_tokens": [
            "find",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "of",
            "{NE}"
        ],
        "original_sql": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
    },
    {
        "original_nl": "Show all the distinct product names with price higher than the average.",
        "generalized_nl": "show [Show]|all|the|distinct|{COLUMN} [product names]|with|{COLUMN_PART} [price]|high [higher]|than|the|average",
        "generalized_tokens": [
            "show",
            "all",
            "the",
            "distinct",
            "{COLUMN}",
            "with",
            "{COLUMN_PART}",
            "high",
            "than",
            "the",
            "average"
        ],
        "original_sql": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
    },
    {
        "original_nl": "What are the distinct names of the products that cost more than the average?",
        "generalized_nl": "What|are|the|distinct|{COLUMN_PART} [names]|of|the|{TABLE} [products]|that|cost|more|than|the|average",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "cost",
            "more",
            "than",
            "the",
            "average"
        ],
        "original_sql": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
    },
    {
        "original_nl": "What is the name of the most expensive product?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [name]|of|the|most|expensive|{TABLE} [product]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "most",
            "expensive",
            "{TABLE}"
        ],
        "original_sql": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
    },
    {
        "original_nl": "Tell me the name of the most pricy product.",
        "generalized_nl": "tell [Tell]|me|the|{COLUMN_PART} [name]|of|the|most|costly [pricy]|{TABLE} [product]",
        "generalized_tokens": [
            "tell",
            "me",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "most",
            "costly",
            "{TABLE}"
        ],
        "original_sql": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
    },
    {
        "original_nl": "List all product names in ascending order of price.",
        "generalized_nl": "list [List]|all|{COLUMN} [product names]|in|ascend [ascending]|{COLUMN_PART} [order]|of|{COLUMN_PART} [price]",
        "generalized_tokens": [
            "list",
            "all",
            "{COLUMN}",
            "in",
            "ascend",
            "{COLUMN_PART}",
            "of",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
    },
    {
        "original_nl": "Sort the names of products in ascending order of their price.",
        "generalized_nl": "screen [Sort]|the|{COLUMN_PART} [names]|of|{TABLE} [products]|in|ascend [ascending]|{COLUMN_PART} [order]|of|their|{COLUMN_PART} [price]",
        "generalized_tokens": [
            "screen",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "in",
            "ascend",
            "{COLUMN_PART}",
            "of",
            "their",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
    },
    {
        "original_nl": "What is the phone number of the performer Ashley?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [phone]|number|of|the|{TABLE} [performer]|{NE} [Ashley]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "number",
            "of",
            "the",
            "{TABLE}",
            "{NE}"
        ],
        "original_sql": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
    },
    {
        "original_nl": "Find the phone number of performer \"Ashley\".",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [phone]|number|of|{TABLE} [performer]|{NE} [Ashley]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "number",
            "of",
            "{TABLE}",
            "{NE}"
        ],
        "original_sql": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
    },
    {
        "original_nl": "Show all payment method codes and the number of orders for each code.",
        "generalized_nl": "show [Show]|all|{COLUMN} [payment method codes]|and|the|number|of|order [orders]|for|each|{COLUMN_PART} [code]",
        "generalized_tokens": [
            "show",
            "all",
            "{COLUMN}",
            "and",
            "the",
            "number",
            "of",
            "order",
            "for",
            "each",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
    },
    {
        "original_nl": "List the distinct payment method codes with the number of orders made",
        "generalized_nl": "list [List]|the|distinct|{COLUMN} [payment method codes]|with|the|number|of|order [orders]|make [made]",
        "generalized_tokens": [
            "list",
            "the",
            "distinct",
            "{COLUMN}",
            "with",
            "the",
            "number",
            "of",
            "order",
            "make"
        ],
        "original_sql": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
    },
    {
        "original_nl": "What is the payment method code used by the most orders?",
        "generalized_nl": "What|is|the|{COLUMN} [payment method code]|use [used]|by|the|most|order [orders]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "use",
            "by",
            "the",
            "most",
            "order"
        ],
        "original_sql": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Which city is the address of the store named \"FJA Filming\" located in?",
        "generalized_nl": "Which|{COLUMN_PART} [city]|is|the|{TABLE} [address]|of|the|{TABLE} [store]|name [named]|FJA|Filming|locate [located]|in",
        "generalized_tokens": [
            "Which",
            "{COLUMN_PART}",
            "is",
            "the",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "name",
            "FJA",
            "Filming",
            "locate",
            "in"
        ],
        "original_sql": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
    },
    {
        "original_nl": "Find the city the store named \"FJA Filming\" is in.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [city]|the|{TABLE} [store]|name [named]|FJA|Filming|is|in",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "the",
            "{TABLE}",
            "name",
            "FJA",
            "Filming",
            "is",
            "in"
        ],
        "original_sql": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
    },
    {
        "original_nl": "What are the states or counties of the address of the stores with marketing region code \"CA\"?",
        "generalized_nl": "What|are|the|state [states]|or|{COLUMN_PART} [counties]|of|the|{TABLE} [address]|of|the|{TABLE} [stores]|with|{COLUMN} [marketing region code]|CA",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "state",
            "or",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN}",
            "CA"
        ],
        "original_sql": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""
    },
    {
        "original_nl": "Find the states or counties where the stores with marketing region code \"CA\" are located.",
        "generalized_nl": "find [Find]|the|state [states]|or|{COLUMN_PART} [counties]|where|the|{TABLE} [stores]|with|{COLUMN} [marketing region code]|CA|are|locate [located]",
        "generalized_tokens": [
            "find",
            "the",
            "state",
            "or",
            "{COLUMN_PART}",
            "where",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN}",
            "CA",
            "are",
            "locate"
        ],
        "original_sql": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""
    },
    {
        "original_nl": "What is the name of the marketing region that the store Rob Dinning belongs to?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [name]|of|the|{TABLE} [marketing region]|that|the|{TABLE} [store]|{NE} [Rob Dinning]|belong [belongs]|to",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "the",
            "{TABLE}",
            "{NE}",
            "belong",
            "to"
        ],
        "original_sql": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""
    },
    {
        "original_nl": "Return the name of the marketing region the store Rob Dinning is located in.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [name]|of|the|{TABLE} [marketing region]|the|{TABLE} [store]|{NE} [Rob Dinning]|is|locate [located]|in",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "the",
            "{TABLE}",
            "{NE}",
            "is",
            "locate",
            "in"
        ],
        "original_sql": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""
    },
    {
        "original_nl": "What are the descriptions of the service types with product price above 100?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [descriptions]|of|the|{TABLE} [service]|type [types]|with|{COLUMN} [product price]|above|{NUMBER} [100]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "type",
            "with",
            "{COLUMN}",
            "above",
            "{NUMBER}"
        ],
        "original_sql": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
    },
    {
        "original_nl": "Give me the descriptions of the service types that cost more than 100.",
        "generalized_nl": "give [Give]|me|the|{COLUMN_PART} [descriptions]|of|the|{TABLE} [service]|type [types]|that|cost|{NUMBER} [more than 100]",
        "generalized_tokens": [
            "give",
            "me",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "type",
            "that",
            "cost",
            "{NUMBER}"
        ],
        "original_sql": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
    },
    {
        "original_nl": "What is the description, code and the corresponding count of each service type?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [description]|{COLUMN_PART} [code]|and|the|match [corresponding]|count|of|each|{TABLE} [service]|{COLUMN_PART} [type]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "the",
            "match",
            "count",
            "of",
            "each",
            "{TABLE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
    },
    {
        "original_nl": "List the description, code and the number of services for each service type.",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [description]|{COLUMN_PART} [code]|and|the|number|of|{TABLE} [services]|for|each|{TABLE} [service]|{COLUMN_PART} [type]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "the",
            "number",
            "of",
            "{TABLE}",
            "for",
            "each",
            "{TABLE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
    },
    {
        "original_nl": "What is the description and code of the type of service that is performed the most often?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [description]|and|{COLUMN_PART} [code]|of|the|{COLUMN_PART} [type]|of|{TABLE} [service]|that|is|perform [performed]|the|most|frequently [often]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "that",
            "is",
            "perform",
            "the",
            "most",
            "frequently"
        ],
        "original_sql": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Find the description and code of the service type that is performed the most times.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [description]|and|{COLUMN_PART} [code]|of|the|{TABLE} [service]|{COLUMN_PART} [type]|that|is|perform [performed]|the|most|time [times]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "that",
            "is",
            "perform",
            "the",
            "most",
            "time"
        ],
        "original_sql": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What are the phones and emails of workshop groups in which services are performed?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [phones]|and|electronic_mail [emails]|of|{COLUMN_PART} [workshop]|group [groups]|in|which|{TABLE} [services]|are|perform [performed]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "electronic_mail",
            "of",
            "{COLUMN_PART}",
            "group",
            "in",
            "which",
            "{TABLE}",
            "are",
            "perform"
        ],
        "original_sql": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
    },
    {
        "original_nl": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
        "generalized_nl": "give [Give]|me|all|the|{COLUMN_PART} [phone]|number [numbers]|and|{COLUMN_PART} [email]|{TABLE} [addresses]|of|the|{COLUMN_PART} [workshop]|group [groups]|where|{TABLE} [services]|are|perform [performed]",
        "generalized_tokens": [
            "give",
            "me",
            "all",
            "the",
            "{COLUMN_PART}",
            "number",
            "and",
            "{COLUMN_PART}",
            "{TABLE}",
            "of",
            "the",
            "{COLUMN_PART}",
            "group",
            "where",
            "{TABLE}",
            "are",
            "perform"
        ],
        "original_sql": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
    },
    {
        "original_nl": "What are the names of workshop groups in which services with product name \"film\" are performed?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|{COLUMN_PART} [workshop]|group [groups]|in|which|{TABLE} [services]|with|{COLUMN} [product name]|film|are|perform [performed]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{COLUMN_PART}",
            "group",
            "in",
            "which",
            "{TABLE}",
            "with",
            "{COLUMN}",
            "film",
            "are",
            "perform"
        ],
        "original_sql": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
    },
    {
        "original_nl": "Find the names of the workshop groups where services with product name \"film\" are performed.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [names]|of|the|{COLUMN_PART} [workshop]|group [groups]|where|{TABLE} [services]|with|{COLUMN} [product name]|film|are|perform [performed]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{COLUMN_PART}",
            "group",
            "where",
            "{TABLE}",
            "with",
            "{COLUMN}",
            "film",
            "are",
            "perform"
        ],
        "original_sql": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
    },
    {
        "original_nl": "For each distinct product name, show its average product price.",
        "generalized_nl": "For|each|distinct|{COLUMN} [product name]|show|its|average|{COLUMN} [product price]",
        "generalized_tokens": [
            "For",
            "each",
            "distinct",
            "{COLUMN}",
            "show",
            "its",
            "average",
            "{COLUMN}"
        ],
        "original_sql": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
    },
    {
        "original_nl": "What are the product names with average product price smaller than 1000000?",
        "generalized_nl": "What|are|the|{COLUMN} [product names]|with|average|{COLUMN} [product price]|{NUMBER} [smaller than 1000000]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "with",
            "average",
            "{COLUMN}",
            "{NUMBER}"
        ],
        "original_sql": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
    },
    {
        "original_nl": "Find the product names whose average product price is below 1000000.",
        "generalized_nl": "find [Find]|the|{COLUMN} [product names]|whose|average|{COLUMN} [product price]|is|below|{NUMBER} [1000000]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "whose",
            "average",
            "{COLUMN}",
            "is",
            "below",
            "{NUMBER}"
        ],
        "original_sql": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
    },
    {
        "original_nl": "What are the total order quantities of photo products?",
        "generalized_nl": "What|are|the|entire [total]|{COLUMN} [order quantities]|of|photograph [photo]|{TABLE} [products]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "entire",
            "{COLUMN}",
            "of",
            "photograph",
            "{TABLE}"
        ],
        "original_sql": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""
    },
    {
        "original_nl": "Compute the total order quantities of the product \"photo\".",
        "generalized_nl": "calculate [Compute]|the|entire [total]|{COLUMN} [order quantities]|of|the|{TABLE} [product]|photograph [photo]",
        "generalized_tokens": [
            "calculate",
            "the",
            "entire",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "photograph"
        ],
        "original_sql": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""
    },
    {
        "original_nl": "What are the order details of the products with price higher than 2000?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [order]|{COLUMN_PART} [details]|of|the|{TABLE} [products]|with|{COLUMN_PART} [price]|high [higher]|than|{NE} [2000]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "high",
            "than",
            "{NE}"
        ],
        "original_sql": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
    },
    {
        "original_nl": "Find the order detail for the products with price above 2000.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [order]|{COLUMN_PART} [detail]|for|the|{TABLE} [products]|with|{COLUMN_PART} [price]|above|{NE} [2000]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "for",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "above",
            "{NE}"
        ],
        "original_sql": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
    },
    {
        "original_nl": "What are the actual delivery dates of orders with quantity 1?",
        "generalized_nl": "What|are|the|{COLUMN} [actual delivery dates]|of|order [orders]|with|{COLUMN_PART} [quantity]|{COLUMN_PART} [1]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "order",
            "with",
            "{COLUMN_PART}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
    },
    {
        "original_nl": "List the actual delivery date for all the orders with quantity 1",
        "generalized_nl": "list [List]|the|{COLUMN} [actual delivery date]|for|all|the|order [orders]|with|{COLUMN_PART} [quantity]|{COLUMN_PART} [1]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "for",
            "all",
            "the",
            "order",
            "with",
            "{COLUMN_PART}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
    },
    {
        "original_nl": "What are the order dates of orders with price higher than 1000?",
        "generalized_nl": "What|are|the|{COLUMN} [order dates]|of|order [orders]|with|{COLUMN_PART} [price]|high [higher]|than|{NUMBER} [1000]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "order",
            "with",
            "{COLUMN_PART}",
            "high",
            "than",
            "{NUMBER}"
        ],
        "original_sql": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
    },
    {
        "original_nl": "Find the order dates of the orders with price above 1000.",
        "generalized_nl": "find [Find]|the|{COLUMN} [order dates]|of|the|order [orders]|with|{COLUMN_PART} [price]|above|{NUMBER} [1000]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "order",
            "with",
            "{COLUMN_PART}",
            "above",
            "{NUMBER}"
        ],
        "original_sql": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
    },
    {
        "original_nl": "How many distinct currency codes are there for all drama workshop groups?",
        "generalized_nl": "How|many|distinct|{COLUMN} [currency codes]|are|there|for|all|{TABLE} [drama workshop groups]",
        "generalized_tokens": [
            "How",
            "many",
            "distinct",
            "{COLUMN}",
            "are",
            "there",
            "for",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
    },
    {
        "original_nl": "Find the number of distinct currency codes used in drama workshop groups.",
        "generalized_nl": "find [Find]|the|number|of|distinct|{COLUMN} [currency codes]|use [used]|in|{TABLE} [drama workshop groups]",
        "generalized_tokens": [
            "find",
            "the",
            "number",
            "of",
            "distinct",
            "{COLUMN}",
            "use",
            "in",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
    },
    {
        "original_nl": "What are the names of the drama workshop groups with address in Feliciaberg city?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|the|{TABLE} [drama workshop groups]|with|{TABLE} [address]|in|{NE} [Feliciaberg city]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "{TABLE}",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
    },
    {
        "original_nl": "Return the the names of the drama workshop groups that are located in Feliciaberg city.",
        "generalized_nl": "return [Return]|the|the|{COLUMN_PART} [names]|of|the|{TABLE} [drama workshop groups]|that|are|locate [located]|in|{NE} [Feliciaberg city]",
        "generalized_tokens": [
            "return",
            "the",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "are",
            "locate",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
    },
    {
        "original_nl": "What are the email addresses of the drama workshop groups with address in Alaska state?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [email]|{TABLE} [addresses]|of|the|{TABLE} [drama workshop groups]|with|{TABLE} [address]|in|{NE} [Alaska]|{COLUMN_PART} [state]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "{TABLE}",
            "in",
            "{NE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""
    },
    {
        "original_nl": "List the email addresses of the drama workshop groups located in Alaska state.",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [email]|{TABLE} [addresses]|of|the|{TABLE} [drama workshop groups]|locate [located]|in|{NE} [Alaska]|{COLUMN_PART} [state]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "locate",
            "in",
            "{NE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""
    },
    {
        "original_nl": "Show all cities along with the number of drama workshop groups in each city.",
        "generalized_nl": "show [Show]|all|city [cities]|along|with|the|number|of|{TABLE} [drama workshop groups]|in|each|{COLUMN_PART} [city]",
        "generalized_tokens": [
            "show",
            "all",
            "city",
            "along",
            "with",
            "the",
            "number",
            "of",
            "{TABLE}",
            "in",
            "each",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"
    },
    {
        "original_nl": "What is the marketing region code that has the most drama workshop groups?",
        "generalized_nl": "What|is|the|{COLUMN} [marketing region code]|that|have [has]|the|most|{TABLE} [drama workshop groups]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "that",
            "have",
            "the",
            "most",
            "{TABLE}"
        ],
        "original_sql": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Show all cities where at least one customer lives in but no performer lives in.",
        "generalized_nl": "show [Show]|all|city [cities]|where|{NUMBER} [at least one]|{TABLE} [customer]|live [lives]|in|but|no|{TABLE} [performer]|live [lives]|in",
        "generalized_tokens": [
            "show",
            "all",
            "city",
            "where",
            "{NUMBER}",
            "{TABLE}",
            "live",
            "in",
            "but",
            "no",
            "{TABLE}",
            "live",
            "in"
        ],
        "original_sql": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
    },
    {
        "original_nl": "Which cities have at least one customer but no performer?",
        "generalized_nl": "Which|city [cities]|have|{NUMBER} [at least one]|{TABLE} [customer]|but|no|{TABLE} [performer]",
        "generalized_tokens": [
            "Which",
            "city",
            "have",
            "{NUMBER}",
            "{TABLE}",
            "but",
            "no",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
    },
    {
        "original_nl": "What is the most frequent status of bookings?",
        "generalized_nl": "What|is|the|most|frequent|{COLUMN_PART} [status]|of|{TABLE} [bookings]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "most",
            "frequent",
            "{COLUMN_PART}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Which status code is the most common of all the bookings?",
        "generalized_nl": "Which|{COLUMN} [status code]|is|the|most|common|of|all|the|{TABLE} [bookings]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "is",
            "the",
            "most",
            "common",
            "of",
            "all",
            "the",
            "{TABLE}"
        ],
        "original_sql": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What are the names of the workshop groups that have bookings with status code \"stop\"?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|the|{COLUMN_PART} [workshop]|group [groups]|that|have|{TABLE} [bookings]|with|{COLUMN} [status code]|stop",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{COLUMN_PART}",
            "group",
            "that",
            "have",
            "{TABLE}",
            "with",
            "{COLUMN}",
            "stop"
        ],
        "original_sql": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""
    },
    {
        "original_nl": "Show the names of all the clients with no booking.",
        "generalized_nl": "show [Show]|the|{COLUMN_PART} [names]|of|all|the|{TABLE} [clients]|with|no|{TABLE} [booking]",
        "generalized_tokens": [
            "show",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "the",
            "{TABLE}",
            "with",
            "no",
            "{TABLE}"
        ],
        "original_sql": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
    },
    {
        "original_nl": "What are the names of the clients who do not have any booking?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|the|{TABLE} [clients]|who|do|not|have|any|{TABLE} [booking]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "do",
            "not",
            "have",
            "any",
            "{TABLE}"
        ],
        "original_sql": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
    },
    {
        "original_nl": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?",
        "generalized_nl": "What|is|the|average|{COLUMN_PART} [quantities]|order [ordered]|with|{COLUMN} [payment method code]|{NE} [MasterCard]|on|{TABLE} [invoices]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{COLUMN_PART}",
            "order",
            "with",
            "{COLUMN}",
            "{NE}",
            "on",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
    },
    {
        "original_nl": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".",
        "generalized_nl": "check [Check]|the|{TABLE} [invoices]|record|and|calculate [compute]|the|average|{COLUMN_PART} [quantities]|order [ordered]|with|the|{COLUMN_PART} [payment]|{COLUMN_PART} [method]|{NE} [MasterCard]",
        "generalized_tokens": [
            "check",
            "the",
            "{TABLE}",
            "record",
            "and",
            "calculate",
            "the",
            "average",
            "{COLUMN_PART}",
            "order",
            "with",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "{NE}"
        ],
        "original_sql": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
    },
    {
        "original_nl": "What is the product ID of the most frequently ordered item on invoices?",
        "generalized_nl": "What|is|the|{COLUMN} [product ID]|of|the|most|frequently|order [ordered]|{COLUMN_PART} [item]|on|{TABLE} [invoices]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "most",
            "frequently",
            "order",
            "{COLUMN_PART}",
            "on",
            "{TABLE}"
        ],
        "original_sql": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Find the id of the product ordered the most often on invoices.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [id]|of|the|{TABLE} [product]|order [ordered]|the|most|frequently [often]|on|{TABLE} [invoices]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "order",
            "the",
            "most",
            "frequently",
            "on",
            "{TABLE}"
        ],
        "original_sql": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the description of the service type which offers both the photo product and the film product?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [description]|of|the|{TABLE} [service]|{COLUMN_PART} [type]|which|offer [offers]|both|the|photograph [photo]|{TABLE} [product]|and|the|film|{TABLE} [product]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "which",
            "offer",
            "both",
            "the",
            "photograph",
            "{TABLE}",
            "and",
            "the",
            "film",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
    },
    {
        "original_nl": "Give me the description of the service type that offers not only the photo product but also the film product.",
        "generalized_nl": "give [Give]|me|the|{COLUMN_PART} [description]|of|the|{TABLE} [service]|{COLUMN_PART} [type]|that|offer [offers]|not|only|the|photograph [photo]|{TABLE} [product]|but|besides [also]|the|film|{TABLE} [product]",
        "generalized_tokens": [
            "give",
            "me",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "that",
            "offer",
            "not",
            "only",
            "the",
            "photograph",
            "{TABLE}",
            "but",
            "besides",
            "the",
            "film",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
    }
]