[
    {
        "original_nl": "What are the ids of the top three products that were purchased in the largest amount?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|top|{NUMBER} [three]|{TABLE} [products]|that|were|{COLUMN_PART} [purchased]|in|the|large [largest]|{COLUMN_PART} [amount]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "top",
            "{NUMBER}",
            "{TABLE}",
            "that",
            "were",
            "{COLUMN_PART}",
            "in",
            "the",
            "large",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
    },
    {
        "original_nl": "Give the ids of the three products purchased in the largest amounts.",
        "generalized_nl": "give [Give]|the|{COLUMN_PART} [ids]|of|the|{NUMBER} [three]|{TABLE} [products]|{COLUMN_PART} [purchased]|in|the|large [largest]|sum [amounts]",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{NUMBER}",
            "{TABLE}",
            "{COLUMN_PART}",
            "in",
            "the",
            "large",
            "sum"
        ],
        "original_sql": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
    },
    {
        "original_nl": "What are the product id and product type of the cheapest product?",
        "generalized_nl": "What|are|the|{COLUMN} [product id]|and|{TABLE} [product]|{COLUMN_PART} [type]|of|the|cheap [cheapest]|{TABLE} [product]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{TABLE}",
            "{COLUMN_PART}",
            "of",
            "the",
            "cheap",
            "{TABLE}"
        ],
        "original_sql": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
    },
    {
        "original_nl": "Give the id and product type of the product with the lowest price.",
        "generalized_nl": "give [Give]|the|{COLUMN_PART} [id]|and|{TABLE} [product]|{COLUMN_PART} [type]|of|the|{TABLE} [product]|with|the|low [lowest]|{COLUMN_PART} [price]",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN_PART}",
            "and",
            "{TABLE}",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "low",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
    },
    {
        "original_nl": "Find the number of different product types.",
        "generalized_nl": "find [Find]|the|number|of|different|{TABLE} [product]|type [types]",
        "generalized_tokens": [
            "find",
            "the",
            "number",
            "of",
            "different",
            "{TABLE}",
            "type"
        ],
        "original_sql": "SELECT count(DISTINCT product_type_code) FROM products"
    },
    {
        "original_nl": "Count the number of distinct product types.",
        "generalized_nl": "count [Count]|the|number|of|distinct|{TABLE} [product]|type [types]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "distinct",
            "{TABLE}",
            "type"
        ],
        "original_sql": "SELECT count(DISTINCT product_type_code) FROM products"
    },
    {
        "original_nl": "Return the address of customer 10.",
        "generalized_nl": "return [Return]|the|{TABLE} [address]|of|{TABLE} [customer]|{VALUE} [10]",
        "generalized_tokens": [
            "return",
            "the",
            "{TABLE}",
            "of",
            "{TABLE}",
            "{VALUE}"
        ],
        "original_sql": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
    },
    {
        "original_nl": "What is the address for the customer with id 10?",
        "generalized_nl": "What|is|the|{TABLE} [address]|for|the|{TABLE} [customer]|with|{COLUMN_PART} [id]|{VALUE} [10]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{TABLE}",
            "for",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "{VALUE}"
        ],
        "original_sql": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
    },
    {
        "original_nl": "What are the staff ids and genders of all staffs whose job title is Department Manager?",
        "generalized_nl": "What|are|the|{COLUMN} [staff ids]|and|{COLUMN_PART} [genders]|of|all|{TABLE} [staffs]|whose|{COLUMN_PART} [job]|{COLUMN_PART} [title]|is|{TABLE} [Department]|director [Manager]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "is",
            "{TABLE}",
            "director"
        ],
        "original_sql": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\""
    },
    {
        "original_nl": "Return the staff ids and genders for any staff with the title Department Manager.",
        "generalized_nl": "return [Return]|the|{COLUMN} [staff ids]|and|{COLUMN_PART} [genders]|for|any|{TABLE} [staff]|with|the|{COLUMN_PART} [title]|{TABLE} [Department]|director [Manager]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "for",
            "any",
            "{TABLE}",
            "with",
            "the",
            "{COLUMN_PART}",
            "{TABLE}",
            "director"
        ],
        "original_sql": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\""
    },
    {
        "original_nl": "For each payment method, return how many customers use it.",
        "generalized_nl": "For|each|{COLUMN_PART} [payment]|{COLUMN_PART} [method]|return|how|many|{TABLE} [customers]|use|it",
        "generalized_tokens": [
            "For",
            "each",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "return",
            "how",
            "many",
            "{TABLE}",
            "use",
            "it"
        ],
        "original_sql": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"
    },
    {
        "original_nl": "How many customers use each payment method?",
        "generalized_nl": "How|many|{TABLE} [customers]|use|each|{COLUMN_PART} [payment]|{COLUMN_PART} [method]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "use",
            "each",
            "{COLUMN_PART}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"
    },
    {
        "original_nl": "What is the id of the product that was ordered the most often?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|of|the|{TABLE} [product]|that|was|order [ordered]|the|most|frequently [often]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "was",
            "order",
            "the",
            "most",
            "frequently"
        ],
        "original_sql": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Give the product id for the product that was ordered most frequently.",
        "generalized_nl": "give [Give]|the|{COLUMN} [product id]|for|the|{TABLE} [product]|that|was|order [ordered]|most|frequently",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN}",
            "for",
            "the",
            "{TABLE}",
            "that",
            "was",
            "order",
            "most",
            "frequently"
        ],
        "original_sql": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What are the name, phone number and email address of the customer who made the largest number of orders?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [name]|{COLUMN_PART} [phone]|number|and|{COLUMN_PART} [email]|{TABLE} [address]|of|the|{TABLE} [customer]|who|make [made]|the|large [largest]|number|of|order [orders]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "number",
            "and",
            "{COLUMN_PART}",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "make",
            "the",
            "large",
            "number",
            "of",
            "order"
        ],
        "original_sql": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the name, phone number and email address for the customer with the most orders.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [name]|{COLUMN_PART} [phone]|number|and|{COLUMN_PART} [email]|{TABLE} [address]|for|the|{TABLE} [customer]|with|the|most|order [orders]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "number",
            "and",
            "{COLUMN_PART}",
            "{TABLE}",
            "for",
            "the",
            "{TABLE}",
            "with",
            "the",
            "most",
            "order"
        ],
        "original_sql": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the average price for each type of product?",
        "generalized_nl": "What|is|the|average|{COLUMN_PART} [price]|for|each|{COLUMN_PART} [type]|of|{TABLE} [product]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{COLUMN_PART}",
            "for",
            "each",
            "{COLUMN_PART}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "original_nl": "Return the average price for each product type.",
        "generalized_nl": "return [Return]|the|average|{COLUMN_PART} [price]|for|each|{TABLE} [product]|{COLUMN_PART} [type]",
        "generalized_tokens": [
            "return",
            "the",
            "average",
            "{COLUMN_PART}",
            "for",
            "each",
            "{TABLE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "original_nl": "How many department stores does the store chain South have?",
        "generalized_nl": "How|many|{TABLE} [department stores]|does|the|{COLUMN_PART} [store]|{COLUMN_PART} [chain]|{NE} [South]|have",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "does",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "{NE}",
            "have"
        ],
        "original_sql": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\""
    },
    {
        "original_nl": "Count the number of stores the chain South has.",
        "generalized_nl": "count [Count]|the|number|of|shop [stores]|the|{COLUMN_PART} [chain]|{NE} [South]|have [has]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "shop",
            "the",
            "{COLUMN_PART}",
            "{NE}",
            "have"
        ],
        "original_sql": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\""
    },
    {
        "original_nl": "What is the name and job title of the staff who was assigned the latest?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [name]|and|{COLUMN_PART} [job]|{COLUMN_PART} [title]|of|the|{TABLE} [staff]|who|was|{COLUMN_PART} [assigned]|the|late [latest]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "was",
            "{COLUMN_PART}",
            "the",
            "late"
        ],
        "original_sql": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
    },
    {
        "original_nl": "Return the name and job title of the staff with the latest date assigned.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [name]|and|{COLUMN_PART} [job]|{COLUMN_PART} [title]|of|the|{TABLE} [staff]|with|the|late [latest]|{COLUMN_PART} [date]|{COLUMN_PART} [assigned]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "late",
            "{COLUMN_PART}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
    },
    {
        "original_nl": "Give me the product type, name and price for all the products supplied by supplier id 3.",
        "generalized_nl": "give [Give]|me|the|{TABLE} [product]|{COLUMN_PART} [type]|{COLUMN_PART} [name]|and|{COLUMN_PART} [price]|for|all|the|{TABLE} [products]|{COLUMN_PART} [supplied]|by|{COLUMN} [supplier id]|{VALUE} [3]",
        "generalized_tokens": [
            "give",
            "me",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "for",
            "all",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "{COLUMN}",
            "{VALUE}"
        ],
        "original_sql": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
    },
    {
        "original_nl": "Return the product type, name, and price for products supplied by supplier 3.",
        "generalized_nl": "return [Return]|the|{TABLE} [product]|{COLUMN_PART} [type]|{COLUMN_PART} [name]|and|{COLUMN_PART} [price]|for|{TABLE} [products]|{COLUMN_PART} [supplied]|by|{TABLE} [supplier]|{VALUE} [3]",
        "generalized_tokens": [
            "return",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "for",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "{TABLE}",
            "{VALUE}"
        ],
        "original_sql": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
    },
    {
        "original_nl": "Return the distinct name of customers whose order status is Pending, in the order of customer id.",
        "generalized_nl": "return [Return]|the|distinct|{COLUMN_PART} [name]|of|{TABLE} [customers]|whose|{COLUMN_PART} [order]|{COLUMN_PART} [status]|is|Pending|in|the|{COLUMN_PART} [order]|of|{COLUMN} [customer id]",
        "generalized_tokens": [
            "return",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "is",
            "Pending",
            "in",
            "the",
            "{COLUMN_PART}",
            "of",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id"
    },
    {
        "original_nl": "What are the distinct names of customers with an order status of Pending, sorted by customer id?",
        "generalized_nl": "What|are|the|distinct|{COLUMN_PART} [names]|of|{TABLE} [customers]|with|an|{COLUMN_PART} [order]|{COLUMN_PART} [status]|of|Pending|screen [sorted]|by|{COLUMN} [customer id]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "with",
            "an",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "Pending",
            "screen",
            "by",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id"
    },
    {
        "original_nl": "Find the name and address of the customers who have both New and Pending orders.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [name]|and|{TABLE} [address]|of|the|{TABLE} [customers]|who|have|both|new [New]|and|pending [Pending]|order [orders]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "and",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "have",
            "both",
            "new",
            "and",
            "pending",
            "order"
        ],
        "original_sql": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\""
    },
    {
        "original_nl": "What are the names and addressed of customers who have both New and Pending orders?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|and|address [addressed]|of|{TABLE} [customers]|who|have|both|New|and|Pending|order [orders]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "address",
            "of",
            "{TABLE}",
            "who",
            "have",
            "both",
            "New",
            "and",
            "Pending",
            "order"
        ],
        "original_sql": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\""
    },
    {
        "original_nl": "Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products.",
        "generalized_nl": "return [Return]|{COLUMN_PART} [ids]|of|all|the|{TABLE} [products]|that|are|{COLUMN_PART} [supplied]|by|{COLUMN} [supplier id]|{VALUE} [2]|and|are|more|expensive|than|the|average|{COLUMN_PART} [price]|of|all|{TABLE} [products]",
        "generalized_tokens": [
            "return",
            "{COLUMN_PART}",
            "of",
            "all",
            "the",
            "{TABLE}",
            "that",
            "are",
            "{COLUMN_PART}",
            "by",
            "{COLUMN}",
            "{VALUE}",
            "and",
            "are",
            "more",
            "expensive",
            "than",
            "the",
            "average",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "original_nl": "What are the ids of products from the supplier with id 2, which are more expensive than the average price across all products?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|{TABLE} [products]|from|the|{TABLE} [supplier]|with|{COLUMN_PART} [id]|{VALUE} [2]|which|are|more|expensive|than|the|average|{COLUMN_PART} [price]|across|all|{TABLE} [products]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "from",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "{VALUE}",
            "which",
            "are",
            "more",
            "expensive",
            "than",
            "the",
            "average",
            "{COLUMN_PART}",
            "across",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "original_nl": "What is the id and name of the department store that has both marketing and managing department?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|and|{COLUMN_PART} [name]|of|the|{TABLE} [department]|{COLUMN_PART} [store]|that|have [has]|both|marketing|and|managing|{TABLE} [department]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "that",
            "have",
            "both",
            "marketing",
            "and",
            "managing",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""
    },
    {
        "original_nl": "What are the ids and names of department stores with both marketing and managing departments?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|and|{COLUMN_PART} [names]|of|{TABLE} [department stores]|with|both|marketing|and|managing|{TABLE} [departments]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "with",
            "both",
            "marketing",
            "and",
            "managing",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""
    },
    {
        "original_nl": "What are the ids of the two department store chains with the largest number of department stores?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|{NUMBER} [two]|{TABLE} [department]|{COLUMN_PART} [store]|chain [chains]|with|the|large [largest]|number|of|{TABLE} [department stores]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{NUMBER}",
            "{TABLE}",
            "{COLUMN_PART}",
            "chain",
            "with",
            "the",
            "large",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
    },
    {
        "original_nl": "Return the ids of the two department store chains with the most department stores.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [ids]|of|the|{NUMBER} [two]|{TABLE} [department]|{COLUMN_PART} [store]|chain [chains]|with|the|most|{TABLE} [department stores]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{NUMBER}",
            "{TABLE}",
            "{COLUMN_PART}",
            "chain",
            "with",
            "the",
            "most",
            "{TABLE}"
        ],
        "original_sql": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
    },
    {
        "original_nl": "What is the id of the department with the least number of staff?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|of|the|{TABLE} [department]|with|the|least|number|of|{TABLE} [staff]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "least",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
    },
    {
        "original_nl": "Return the id of the department with the fewest staff assignments.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [id]|of|the|{TABLE} [department]|with|the|fewest|{TABLE} [staff]|assignment [assignments]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "fewest",
            "{TABLE}",
            "assignment"
        ],
        "original_sql": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
    },
    {
        "original_nl": "For each product type, return the maximum and minimum price.",
        "generalized_nl": "For|each|{TABLE} [product]|{COLUMN_PART} [type]|return|the|maximal [maximum]|and|minimal [minimum]|{COLUMN_PART} [price]",
        "generalized_tokens": [
            "For",
            "each",
            "{TABLE}",
            "{COLUMN_PART}",
            "return",
            "the",
            "maximal",
            "and",
            "minimal",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "original_nl": "What are the maximum and minimum product prices for each product type?",
        "generalized_nl": "What|are|the|maximal [maximum]|and|minimal [minimum]|{COLUMN} [product prices]|for|each|{TABLE} [product]|{COLUMN_PART} [type]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "maximal",
            "and",
            "minimal",
            "{COLUMN}",
            "for",
            "each",
            "{TABLE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "original_nl": "Find the product type whose average price is higher than the average price of all products.",
        "generalized_nl": "find [Find]|the|{TABLE} [product]|{COLUMN_PART} [type]|whose|average|{COLUMN_PART} [price]|is|high [higher]|than|the|average|{COLUMN_PART} [price]|of|all|{TABLE} [products]",
        "generalized_tokens": [
            "find",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "whose",
            "average",
            "{COLUMN_PART}",
            "is",
            "high",
            "than",
            "the",
            "average",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "original_nl": "What is the code of the product type with an average price higher than the average price of all products?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [code]|of|the|{TABLE} [product]|{COLUMN_PART} [type]|with|an|average|{COLUMN_PART} [price]|high [higher]|than|the|average|{COLUMN_PART} [price]|of|all|{TABLE} [products]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "with",
            "an",
            "average",
            "{COLUMN_PART}",
            "high",
            "than",
            "the",
            "average",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "original_nl": "Find the id and name of the staff who has been assigned for the shortest period.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [id]|and|{COLUMN_PART} [name]|of|the|{TABLE} [staff]|who|has|been|{COLUMN_PART} [assigned]|for|the|short [shortest]|period",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "has",
            "been",
            "{COLUMN_PART}",
            "for",
            "the",
            "short",
            "period"
        ],
        "original_sql": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"
    },
    {
        "original_nl": "What is the id and name of the staff who has been assigned for the least amount of time?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|and|{COLUMN_PART} [name]|of|the|{TABLE} [staff]|who|has|been|{COLUMN_PART} [assigned]|for|the|least|{COLUMN_PART} [amount]|of|time",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "has",
            "been",
            "{COLUMN_PART}",
            "for",
            "the",
            "least",
            "{COLUMN_PART}",
            "of",
            "time"
        ],
        "original_sql": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"
    },
    {
        "original_nl": "Return the names and ids of all products whose price is between 600 and 700.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [ids]|of|all|{TABLE} [products]|whose|{COLUMN_PART} [price]|is|{NUMBER} [between 600 and 700]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "is",
            "{NUMBER}"
        ],
        "original_sql": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
    },
    {
        "original_nl": "What are the names and ids of products costing between 600 and 700?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [ids]|of|{TABLE} [products]|cost [costing]|{NUMBER} [between 600 and 700]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "cost",
            "{NUMBER}"
        ],
        "original_sql": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
    },
    {
        "original_nl": "Find the ids of all distinct customers who made order after some orders that were Cancelled.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [ids]|of|all|distinct|{TABLE} [customers]|who|make [made]|{COLUMN_PART} [order]|after|some|order [orders]|that|were|cancel [Cancelled]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "distinct",
            "{TABLE}",
            "who",
            "make",
            "{COLUMN_PART}",
            "after",
            "some",
            "order",
            "that",
            "were",
            "cancel"
        ],
        "original_sql": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")"
    },
    {
        "original_nl": "What are the distinct ids of customers who made an order after any order that was Cancelled?",
        "generalized_nl": "What|are|the|distinct|{COLUMN_PART} [ids]|of|{TABLE} [customers]|who|make [made]|an|{COLUMN_PART} [order]|after|any|{COLUMN_PART} [order]|that|was|cancel [Cancelled]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "make",
            "an",
            "{COLUMN_PART}",
            "after",
            "any",
            "{COLUMN_PART}",
            "that",
            "was",
            "cancel"
        ],
        "original_sql": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")"
    },
    {
        "original_nl": "What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff?",
        "generalized_nl": "What|is|{COLUMN_PART} [id]|of|the|{TABLE} [staff]|who|have [had]|a|{TABLE} [Staff Department Assignment]|earlier|than|any|{NE} [Clerical Staff]",
        "generalized_tokens": [
            "What",
            "is",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "have",
            "a",
            "{TABLE}",
            "earlier",
            "than",
            "any",
            "{NE}"
        ],
        "original_sql": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')"
    },
    {
        "original_nl": "Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [id]|of|the|{TABLE} [staff]|whose|{TABLE} [Staff Department Assignment]|was|early [earlier]|than|that|of|any|{NE} [Clerical Staff]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "whose",
            "{TABLE}",
            "was",
            "early",
            "than",
            "that",
            "of",
            "any",
            "{NE}"
        ],
        "original_sql": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')"
    },
    {
        "original_nl": "What are the names and ids of customers whose address contains TN?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [ids]|of|{TABLE} [customers]|whose|{TABLE} [address]|contain [contains]|TN",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "whose",
            "{TABLE}",
            "contain",
            "TN"
        ],
        "original_sql": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""
    },
    {
        "original_nl": "Return the names and ids of customers who have TN in their address.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [ids]|of|{TABLE} [customers]|who|have|{NE} [TN]|in|their|{TABLE} [address]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "{NE}",
            "in",
            "their",
            "{TABLE}"
        ],
        "original_sql": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""
    },
    {
        "original_nl": "Return the name and gender of the staff who was assigned in 2016.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [name]|and|{COLUMN_PART} [gender]|of|the|{TABLE} [staff]|who|was|{COLUMN_PART} [assigned]|in|{NE} [2016]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "was",
            "{COLUMN_PART}",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\""
    },
    {
        "original_nl": "What are the names and genders of staff who were assigned in 2016?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [genders]|of|{TABLE} [staff]|who|were|{COLUMN_PART} [assigned]|in|{NE} [2016]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "were",
            "{COLUMN_PART}",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\""
    },
    {
        "original_nl": "List the name of staff who has been assigned multiple jobs.",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [name]|of|{TABLE} [staff]|who|has|been|{COLUMN_PART} [assigned]|multiple|job [jobs]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "has",
            "been",
            "{COLUMN_PART}",
            "multiple",
            "job"
        ],
        "original_sql": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
    },
    {
        "original_nl": "What are the names of staff who have been assigned multiple jobs?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|{TABLE} [staff]|who|have|been|{COLUMN_PART} [assigned]|multiple|job [jobs]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "been",
            "{COLUMN_PART}",
            "multiple",
            "job"
        ],
        "original_sql": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
    },
    {
        "original_nl": "List the name and phone number of all suppliers in the alphabetical order of their addresses.",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [name]|and|{COLUMN_PART} [phone]|number|of|all|{TABLE} [suppliers]|in|the|alphabetic [alphabetical]|{COLUMN_PART} [order]|of|their|{TABLE} [addresses]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "number",
            "of",
            "all",
            "{TABLE}",
            "in",
            "the",
            "alphabetic",
            "{COLUMN_PART}",
            "of",
            "their",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
    },
    {
        "original_nl": "What are the names and phone numbers for all suppliers, sorted in alphabetical order of their addressed?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [phone]|number [numbers]|for|all|{TABLE} [suppliers]|screen [sorted]|in|alphabetic [alphabetical]|{COLUMN_PART} [order]|of|their|address [addressed]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "number",
            "for",
            "all",
            "{TABLE}",
            "screen",
            "in",
            "alphabetic",
            "{COLUMN_PART}",
            "of",
            "their",
            "address"
        ],
        "original_sql": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
    },
    {
        "original_nl": "What are the phone numbers of all customers and suppliers.",
        "generalized_nl": "What|are|the|{COLUMN_PART} [phone]|number [numbers]|of|all|{TABLE} [customers]|and|{TABLE} [suppliers]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "number",
            "of",
            "all",
            "{TABLE}",
            "and",
            "{TABLE}"
        ],
        "original_sql": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"
    },
    {
        "original_nl": "Return the phone numbers for all customers and suppliers.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [phone]|number [numbers]|for|all|{TABLE} [customers]|and|{TABLE} [suppliers]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "number",
            "for",
            "all",
            "{TABLE}",
            "and",
            "{TABLE}"
        ],
        "original_sql": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"
    },
    {
        "original_nl": "Return the ids of all products that were ordered more than three times or supplied more than 80000.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [ids]|of|all|{TABLE} [products]|that|were|order [ordered]|{NUMBER} [more than three]|time [times]|or|{COLUMN_PART} [supplied]|{NUMBER} [more than 80000]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "were",
            "order",
            "{NUMBER}",
            "time",
            "or",
            "{COLUMN_PART}",
            "{NUMBER}"
        ],
        "original_sql": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
    },
    {
        "original_nl": "What are the ids of all products that were either ordered more than 3 times or have a cumulative amount purchased of above 80000?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|all|{TABLE} [products]|that|were|either|order [ordered]|{NUMBER} [more than 3]|time [times]|or|have|a|accumulative [cumulative]|{COLUMN_PART} [amount]|{COLUMN_PART} [purchased]|of|above|{NUMBER} [80000]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "were",
            "either",
            "order",
            "{NUMBER}",
            "time",
            "or",
            "have",
            "a",
            "accumulative",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "above",
            "{NUMBER}"
        ],
        "original_sql": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
    },
    {
        "original_nl": "What are id and name of the products whose price is lower than 600 or higher than 900?",
        "generalized_nl": "What|are|{COLUMN_PART} [id]|and|{COLUMN_PART} [name]|of|the|{TABLE} [products]|whose|{COLUMN_PART} [price]|is|low [lower]|than|{NUMBER} [600]|or|high [higher]|than|{NUMBER} [900]",
        "generalized_tokens": [
            "What",
            "are",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "is",
            "low",
            "than",
            "{NUMBER}",
            "or",
            "high",
            "than",
            "{NUMBER}"
        ],
        "original_sql": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
    },
    {
        "original_nl": "Give the ids and names of products with price lower than 600 or higher than 900.",
        "generalized_nl": "give [Give]|the|{COLUMN_PART} [ids]|and|{COLUMN_PART} [names]|of|{TABLE} [products]|with|{COLUMN_PART} [price]|{NUMBER} [lower than 600 or higher than 900]",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "{NUMBER}"
        ],
        "original_sql": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
    },
    {
        "original_nl": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [id]|of|{TABLE} [suppliers]|whose|average|{COLUMN_PART} [amount]|{COLUMN_PART} [purchased]|for|each|{TABLE} [product]|is|above|{NUMBER} [50000]|or|below|{NUMBER} [30000]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "whose",
            "average",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "for",
            "each",
            "{TABLE}",
            "is",
            "above",
            "{NUMBER}",
            "or",
            "below",
            "{NUMBER}"
        ],
        "original_sql": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"
    },
    {
        "original_nl": "What are the ids of suppliers which have an average amount purchased of above 50000 or below 30000?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|{TABLE} [suppliers]|which|have|an|average|{COLUMN_PART} [amount]|{COLUMN_PART} [purchased]|of|above|{NUMBER} [50000]|or|below|{NUMBER} [30000]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "which",
            "have",
            "an",
            "average",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "above",
            "{NUMBER}",
            "or",
            "below",
            "{NUMBER}"
        ],
        "original_sql": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"
    },
    {
        "original_nl": "What are the average amount purchased and value purchased for the supplier who supplies the most products.",
        "generalized_nl": "What|are|the|average|{COLUMN_PART} [amount]|{COLUMN_PART} [purchased]|and|{COLUMN_PART} [value]|{COLUMN_PART} [purchased]|for|the|{TABLE} [supplier]|who|supply [supplies]|the|most|{TABLE} [products]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "average",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "for",
            "the",
            "{TABLE}",
            "who",
            "supply",
            "the",
            "most",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "original_nl": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.",
        "generalized_nl": "return [Return]|the|average|{COLUMN} [total amount purchased]|and|{COLUMN} [total value purchased]|for|the|{TABLE} [supplier]|who|supply [supplies]|the|great [greatest]|number|of|{TABLE} [products]",
        "generalized_tokens": [
            "return",
            "the",
            "average",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "for",
            "the",
            "{TABLE}",
            "who",
            "supply",
            "the",
            "great",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "original_nl": "What is the largest and smallest customer codes?",
        "generalized_nl": "What|is|the|large [largest]|and|small [smallest]|{COLUMN} [customer codes]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "large",
            "and",
            "small",
            "{COLUMN}"
        ],
        "original_sql": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"
    },
    {
        "original_nl": "Return the maximum and minimum customer codes.",
        "generalized_nl": "return [Return]|the|maximal [maximum]|and|minimal [minimum]|{COLUMN} [customer codes]",
        "generalized_tokens": [
            "return",
            "the",
            "maximal",
            "and",
            "minimal",
            "{COLUMN}"
        ],
        "original_sql": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"
    },
    {
        "original_nl": "List the names of all the distinct customers who bought a keyboard.",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [names]|of|all|the|distinct|{TABLE} [customers]|who|buy [bought]|a|keyboard",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "the",
            "distinct",
            "{TABLE}",
            "who",
            "buy",
            "a",
            "keyboard"
        ],
        "original_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\""
    },
    {
        "original_nl": "What are the distinct names of customers who have purchased a keyboard?",
        "generalized_nl": "What|are|the|distinct|{COLUMN_PART} [names]|of|{TABLE} [customers]|who|have|{COLUMN_PART} [purchased]|a|keyboard",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "{COLUMN_PART}",
            "a",
            "keyboard"
        ],
        "original_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\""
    },
    {
        "original_nl": "List the names and phone numbers of all the distinct suppliers who supply red jeans.",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [phone]|number [numbers]|of|all|the|distinct|{TABLE} [suppliers]|who|supply|crimson [red]|jean [jeans]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "number",
            "of",
            "all",
            "the",
            "distinct",
            "{TABLE}",
            "who",
            "supply",
            "crimson",
            "jean"
        ],
        "original_sql": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\""
    },
    {
        "original_nl": "What are the distinct names and phone numbers for suppliers who have red jeans?",
        "generalized_nl": "What|are|the|distinct|{COLUMN_PART} [names]|and|{COLUMN_PART} [phone]|number [numbers]|for|{TABLE} [suppliers]|who|have|crimson [red]|jean [jeans]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "number",
            "for",
            "{TABLE}",
            "who",
            "have",
            "crimson",
            "jean"
        ],
        "original_sql": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\""
    },
    {
        "original_nl": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?",
        "generalized_nl": "What|are|the|high [highest]|and|low [lowest]|{COLUMN_PART} [prices]|of|{TABLE} [products]|group [grouped]|by|and|alphabetically|order [ordered]|by|{TABLE} [product]|{COLUMN_PART} [type]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "high",
            "and",
            "low",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "group",
            "by",
            "and",
            "alphabetically",
            "order",
            "by",
            "{TABLE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
    },
    {
        "original_nl": "Give the maximum and minimum product prices for each product type, grouped and ordered by product type.",
        "generalized_nl": "give [Give]|the|maximal [maximum]|and|minimal [minimum]|{COLUMN} [product prices]|for|each|{TABLE} [product]|{COLUMN_PART} [type]|group [grouped]|and|order [ordered]|by|{TABLE} [product]|{COLUMN_PART} [type]",
        "generalized_tokens": [
            "give",
            "the",
            "maximal",
            "and",
            "minimal",
            "{COLUMN}",
            "for",
            "each",
            "{TABLE}",
            "{COLUMN_PART}",
            "group",
            "and",
            "order",
            "by",
            "{TABLE}",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
    },
    {
        "original_nl": "List the order id, customer id for orders in Cancelled status, ordered by their order dates.",
        "generalized_nl": "list [List]|the|{COLUMN} [order id]|{COLUMN} [customer id]|for|order [orders]|in|cancel [Cancelled]|{COLUMN_PART} [status]|order [ordered]|by|their|{COLUMN} [order dates]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "{COLUMN}",
            "for",
            "order",
            "in",
            "cancel",
            "{COLUMN_PART}",
            "order",
            "by",
            "their",
            "{COLUMN}"
        ],
        "original_sql": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date"
    },
    {
        "original_nl": "Find the names of products that were bought by at least two distinct customers.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [names]|of|{TABLE} [products]|that|were|buy [bought]|by|{NUMBER} [at least two]|distinct|{TABLE} [customers]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "that",
            "were",
            "buy",
            "by",
            "{NUMBER}",
            "distinct",
            "{TABLE}"
        ],
        "original_sql": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
    },
    {
        "original_nl": "What are the distinct names of products purchased by at least two different customers?",
        "generalized_nl": "What|are|the|distinct|{COLUMN_PART} [names]|of|{TABLE} [products]|{COLUMN_PART} [purchased]|by|{NUMBER} [at least two]|different|{TABLE} [customers]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "{NUMBER}",
            "different",
            "{TABLE}"
        ],
        "original_sql": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
    },
    {
        "original_nl": "Find the names of customers who have bought by at least three distinct products.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [names]|of|{TABLE} [customers]|who|have|buy [bought]|by|{NUMBER} [at least three]|distinct|{TABLE} [products]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "buy",
            "by",
            "{NUMBER}",
            "distinct",
            "{TABLE}"
        ],
        "original_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
    },
    {
        "original_nl": "What are the distinct names of customers who have purchased at least three different products?",
        "generalized_nl": "What|are|the|distinct|{COLUMN_PART} [names]|of|{TABLE} [customers]|who|have|{COLUMN_PART} [purchased]|{NUMBER} [at least three]|different|{TABLE} [products]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "{COLUMN_PART}",
            "{NUMBER}",
            "different",
            "{TABLE}"
        ],
        "original_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
    },
    {
        "original_nl": "Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [name]|and|{COLUMN_PART} [gender]|of|the|{TABLE} [staff]|who|has|been|{COLUMN_PART} [assigned]|the|{COLUMN_PART} [job]|of|sale [Sales]|person [Person]|but|never|{NE} [Clerical Staff]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "has",
            "been",
            "{COLUMN_PART}",
            "the",
            "{COLUMN_PART}",
            "of",
            "sale",
            "person",
            "but",
            "never",
            "{NE}"
        ],
        "original_sql": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""
    },
    {
        "original_nl": "What are the names and genders of staff who have held the title Sales Person, but never Clerical Staff?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|and|{COLUMN_PART} [genders]|of|{TABLE} [staff]|who|have|hold [held]|the|{COLUMN_PART} [title]|{NE} [Sales Person]|but|never|clerical [Clerical]|{TABLE} [Staff]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "have",
            "hold",
            "the",
            "{COLUMN_PART}",
            "{NE}",
            "but",
            "never",
            "clerical",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""
    },
    {
        "original_nl": "Find the id and name of customers whose address contains WY state and do not use credit card for payment.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [id]|and|{COLUMN_PART} [name]|of|{TABLE} [customers]|whose|{TABLE} [address]|contain [contains]|WY|state|and|do|not|use|credit|card|for|{COLUMN_PART} [payment]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "whose",
            "{TABLE}",
            "contain",
            "WY",
            "state",
            "and",
            "do",
            "not",
            "use",
            "credit",
            "card",
            "for",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
    },
    {
        "original_nl": "What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|and|{COLUMN_PART} [names]|of|{TABLE} [customers]|with|address [addressed]|that|contain|WY|and|who|do|not|use|a|credit|card|for|{COLUMN_PART} [payment]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "with",
            "address",
            "that",
            "contain",
            "WY",
            "and",
            "who",
            "do",
            "not",
            "use",
            "a",
            "credit",
            "card",
            "for",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
    },
    {
        "original_nl": "Find the average price of all product clothes.",
        "generalized_nl": "find [Find]|the|average|{COLUMN_PART} [price]|of|all|{TABLE} [product]|apparel [clothes]",
        "generalized_tokens": [
            "find",
            "the",
            "average",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}",
            "apparel"
        ],
        "original_sql": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"
    },
    {
        "original_nl": "What is the average price of clothes?",
        "generalized_nl": "What|is|the|average|{COLUMN_PART} [price]|of|apparel [clothes]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{COLUMN_PART}",
            "of",
            "apparel"
        ],
        "original_sql": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"
    },
    {
        "original_nl": "Find the name of the most expensive hardware product.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [name]|of|the|most|expensive|hardware|{TABLE} [product]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "most",
            "expensive",
            "hardware",
            "{TABLE}"
        ],
        "original_sql": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"
    },
    {
        "original_nl": "What is the name of the hardware product with the greatest price?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [name]|of|the|hardware|{TABLE} [product]|with|the|great [greatest]|{COLUMN_PART} [price]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "hardware",
            "{TABLE}",
            "with",
            "the",
            "great",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"
    }
]