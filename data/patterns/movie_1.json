[
    {
        "original_nl": "Find the titles of all movies directed by steven spielberg.",
        "generalized_nl": "find [Find]|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|direct [directed]|by|{NE} [steven spielberg]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "direct",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'"
    },
    {
        "original_nl": "What are the names of all movies directed by Steven Spielberg?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{TABLE} [movies]|direct [directed]|by|{NE} [Steven Spielberg]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "direct",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'"
    },
    {
        "original_nl": "What is the name of the movie produced after 2000 and directed by James Cameron?",
        "generalized_nl": "What|is|the|{COLUMN} [name]|of|the|{TABLE} [movie]|produce [produced]|after|{NE} [2000]|and|direct [directed]|by|{NE} [James Cameron]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "produce",
            "after",
            "{NE}",
            "and",
            "direct",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000"
    },
    {
        "original_nl": "What are the titles of all movies that James Cameron directed after 2000?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|that|{NE} [James Cameron]|direct [directed]|after|{NE} [2000]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "{NE}",
            "direct",
            "after",
            "{NE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000"
    },
    {
        "original_nl": "How many movies were made before 2000?",
        "generalized_nl": "How|many|{TABLE} [movies]|were|make [made]|before|{NE} [2000]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "were",
            "make",
            "before",
            "{NE}"
        ],
        "original_sql": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
    },
    {
        "original_nl": "How many movies were made before 2000?",
        "generalized_nl": "How|many|{TABLE} [movies]|were|make [made]|before|{NE} [2000]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "were",
            "make",
            "before",
            "{NE}"
        ],
        "original_sql": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
    },
    {
        "original_nl": "Who is the director of movie Avatar?",
        "generalized_nl": "Who|is|the|{COLUMN} [director]|of|{TABLE} [movie]|{NE} [Avatar]",
        "generalized_tokens": [
            "Who",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "{NE}"
        ],
        "original_sql": "SELECT director FROM Movie WHERE title  = 'Avatar'"
    },
    {
        "original_nl": "Who directed Avatar?",
        "generalized_nl": "Who|direct [directed]|{NE} [Avatar]",
        "generalized_tokens": [
            "Who",
            "direct",
            "{NE}"
        ],
        "original_sql": "SELECT director FROM Movie WHERE title  = 'Avatar'"
    },
    {
        "original_nl": "How many reviewers listed?",
        "generalized_nl": "How|many|{TABLE} [reviewers]|list [listed]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "list"
        ],
        "original_sql": "SELECT count(*) FROM Reviewer"
    },
    {
        "original_nl": "How many reviewers are there?",
        "generalized_nl": "How|many|{TABLE} [reviewers]|are|there",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "are",
            "there"
        ],
        "original_sql": "SELECT count(*) FROM Reviewer"
    },
    {
        "original_nl": "What is the id of the reviewer whose name has substring \u201cMike\u201d?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|of|the|{TABLE} [reviewer]|whose|{COLUMN} [name]|has|substring|{NE} [Mike]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN}",
            "has",
            "substring",
            "{NE}"
        ],
        "original_sql": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""
    },
    {
        "original_nl": "What is the id of the reviewer whose name includes the word \"Mike\"?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|of|the|{TABLE} [reviewer]|whose|{COLUMN} [name]|include [includes]|the|word|{NE} [Mike]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN}",
            "include",
            "the",
            "word",
            "{NE}"
        ],
        "original_sql": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""
    },
    {
        "original_nl": "What is the reviewer id of Daniel Lewis?",
        "generalized_nl": "What|is|the|{COLUMN} [reviewer id]|of|{NE} [Daniel Lewis]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "{NE}"
        ],
        "original_sql": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""
    },
    {
        "original_nl": "What is the id of the reviewer named Daniel Lewis?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|of|the|{TABLE} [reviewer]|name [named]|{NE} [Daniel Lewis]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "name",
            "{NE}"
        ],
        "original_sql": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""
    },
    {
        "original_nl": "What is the total number of ratings that has more than 3 stars?",
        "generalized_nl": "What|is|the|entire [total]|number|of|{TABLE} [ratings]|that|have [has]|{NUMBER} [more than 3]|{COLUMN} [stars]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "entire",
            "number",
            "of",
            "{TABLE}",
            "that",
            "have",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(*) FROM Rating WHERE stars  >  3"
    },
    {
        "original_nl": "How many movie ratings have more than 3 stars?",
        "generalized_nl": "How|many|{TABLE} [movie]|{TABLE} [ratings]|have|{NUMBER} [more than 3]|{COLUMN} [stars]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "{TABLE}",
            "have",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(*) FROM Rating WHERE stars  >  3"
    },
    {
        "original_nl": "What is the lowest and highest rating star?",
        "generalized_nl": "What|is|the|low [lowest]|and|high [highest]|{COLUMN} [rating star]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "low",
            "and",
            "high",
            "{COLUMN}"
        ],
        "original_sql": "SELECT max(stars) ,  min(stars) FROM Rating"
    },
    {
        "original_nl": "What is the maximum and mininum number of stars a rating can receive?",
        "generalized_nl": "What|is|the|maximal [maximum]|and|mininum|number|of|{COLUMN} [stars]|a|{TABLE} [rating]|can|receive",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "maximal",
            "and",
            "mininum",
            "number",
            "of",
            "{COLUMN}",
            "a",
            "{TABLE}",
            "can",
            "receive"
        ],
        "original_sql": "SELECT max(stars) ,  min(stars) FROM Rating"
    },
    {
        "original_nl": "Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year.",
        "generalized_nl": "find [Find]|{NE} [all years]|that|have|a|{TABLE} [movie]|that|receive [received]|a|{TABLE} [rating]|of|{NUMBER} [4]|or|{NUMBER} [5]|and|screen [sort]|them|in|increase [increasing]|order|of|{COLUMN} [year]",
        "generalized_tokens": [
            "find",
            "{NE}",
            "that",
            "have",
            "a",
            "{TABLE}",
            "that",
            "receive",
            "a",
            "{TABLE}",
            "of",
            "{NUMBER}",
            "or",
            "{NUMBER}",
            "and",
            "screen",
            "them",
            "in",
            "increase",
            "order",
            "of",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"
    },
    {
        "original_nl": "In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently?",
        "generalized_nl": "In|{NE} [what years]|do [did]|a|{TABLE} [movie]|receive|a|{NUMBER} [4]|or|{NUMBER} [5]|{COLUMN} [star]|{TABLE} [rating]|and|list|{NE} [the years from oldest]|to|most|recently",
        "generalized_tokens": [
            "In",
            "{NE}",
            "do",
            "a",
            "{TABLE}",
            "receive",
            "a",
            "{NUMBER}",
            "or",
            "{NUMBER}",
            "{COLUMN}",
            "{TABLE}",
            "and",
            "list",
            "{NE}",
            "to",
            "most",
            "recently"
        ],
        "original_sql": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"
    },
    {
        "original_nl": "What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|the|{COLUMN} [directors]|who|create [created]|a|{TABLE} [movie]|with|a|{NUMBER} [5]|{COLUMN} [star]|{TABLE} [rating]|and|what|was|the|{COLUMN} [name]|of|those|{TABLE} [movies]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{COLUMN}",
            "who",
            "create",
            "a",
            "{TABLE}",
            "with",
            "a",
            "{NUMBER}",
            "{COLUMN}",
            "{TABLE}",
            "and",
            "what",
            "was",
            "the",
            "{COLUMN}",
            "of",
            "those",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5"
    },
    {
        "original_nl": "What is the average rating star for each reviewer?",
        "generalized_nl": "What|is|the|average|{COLUMN} [rating star]|for|each|{TABLE} [reviewer]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{COLUMN}",
            "for",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
    },
    {
        "original_nl": "What is the average number of stars that each reviewer awards for a movie?",
        "generalized_nl": "What|is|the|average|number|of|{COLUMN} [stars]|that|each|{TABLE} [reviewer]|award [awards]|for|a|{TABLE} [movie]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "number",
            "of",
            "{COLUMN}",
            "that",
            "each",
            "{TABLE}",
            "award",
            "for",
            "a",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
    },
    {
        "original_nl": "Find the titles of all movies that have no ratings.",
        "generalized_nl": "find [Find]|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|that|have|no|{TABLE} [ratings]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "have",
            "no",
            "{TABLE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
    },
    {
        "original_nl": "What are the titles of all movies that have not been rated?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|that|have|not|been|rat [rated]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "have",
            "not",
            "been",
            "rat"
        ],
        "original_sql": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
    },
    {
        "original_nl": "Find the names of all reviewers who have ratings with a NULL value for the date.",
        "generalized_nl": "find [Find]|the|{COLUMN} [names]|of|all|{TABLE} [reviewers]|who|have|{TABLE} [ratings]|with|a|null [NULL]|value|for|the|{COLUMN_PART} [date]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "who",
            "have",
            "{TABLE}",
            "with",
            "a",
            "null",
            "value",
            "for",
            "the",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
    },
    {
        "original_nl": "What are the different names of all reviewers whose ratings do not have a date field?",
        "generalized_nl": "What|are|the|different|{COLUMN} [names]|of|all|{TABLE} [reviewers]|whose|{TABLE} [ratings]|do|not|have|a|{COLUMN_PART} [date]|field",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "different",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "whose",
            "{TABLE}",
            "do",
            "not",
            "have",
            "a",
            "{COLUMN_PART}",
            "field"
        ],
        "original_sql": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
    },
    {
        "original_nl": "What is the average rating stars and title for the oldest movie?",
        "generalized_nl": "What|is|the|average|{COLUMN} [rating stars]|and|{COLUMN} [title]|for|the|old [oldest]|{TABLE} [movie]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "for",
            "the",
            "old",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"
    },
    {
        "original_nl": "For the oldest movie listed, what is its average rating and title?",
        "generalized_nl": "For|the|old [oldest]|{TABLE} [movie]|list [listed]|what|is|it|s|average|{TABLE} [rating]|and|{COLUMN} [title]",
        "generalized_tokens": [
            "For",
            "the",
            "old",
            "{TABLE}",
            "list",
            "what",
            "is",
            "it",
            "s",
            "average",
            "{TABLE}",
            "and",
            "{COLUMN}"
        ],
        "original_sql": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"
    },
    {
        "original_nl": "What is the name of the most recent movie?",
        "generalized_nl": "What|is|the|{COLUMN} [name]|of|the|most|recent|{TABLE} [movie]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "most",
            "recent",
            "{TABLE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"
    },
    {
        "original_nl": "What is the title of the newest movie?",
        "generalized_nl": "What|is|the|{COLUMN} [title]|of|the|new [newest]|{TABLE} [movie]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "new",
            "{TABLE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"
    },
    {
        "original_nl": "What is the maximum stars and year for the most recent movie?",
        "generalized_nl": "What|is|the|maximal [maximum]|{COLUMN} [stars]|and|{COLUMN} [year]|for|the|most|recent|{TABLE} [movie]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "maximal",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "for",
            "the",
            "most",
            "recent",
            "{TABLE}"
        ],
        "original_sql": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
    },
    {
        "original_nl": "What is highest rating for the most recent movie and when was it released?",
        "generalized_nl": "What|is|high [highest]|{TABLE} [rating]|for|the|most|recent|{TABLE} [movie]|and|when|was|it|free [released]",
        "generalized_tokens": [
            "What",
            "is",
            "high",
            "{TABLE}",
            "for",
            "the",
            "most",
            "recent",
            "{TABLE}",
            "and",
            "when",
            "was",
            "it",
            "free"
        ],
        "original_sql": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
    },
    {
        "original_nl": "What is the names of movies whose created year is after all movies directed by Steven Spielberg?",
        "generalized_nl": "What|is|the|{COLUMN} [names]|of|{TABLE} [movies]|whose|create [created]|{COLUMN} [year]|is|after|all|{TABLE} [movies]|direct [directed]|by|{NE} [Steven Spielberg]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "whose",
            "create",
            "{COLUMN}",
            "is",
            "after",
            "all",
            "{TABLE}",
            "direct",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")"
    },
    {
        "original_nl": "What are the names of all movies that were created after the most recent Steven Spielberg film?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{TABLE} [movies]|that|were|create [created]|after|the|most|recent|{NE} [Steven Spielberg]|film",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "were",
            "create",
            "after",
            "the",
            "most",
            "recent",
            "{NE}",
            "film"
        ],
        "original_sql": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")"
    },
    {
        "original_nl": "What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by James Cameron?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|and|{COLUMN} [directors]|of|the|{TABLE} [movies]|whose|{COLUMN} [star]|is|great [greater]|than|the|average|{COLUMN} [stars]|of|the|{TABLE} [movies]|direct [directed]|by|{NE} [James Cameron]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN}",
            "is",
            "great",
            "than",
            "the",
            "average",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "direct",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")"
    },
    {
        "original_nl": "What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|and|{COLUMN} [directors]|of|all|{TABLE} [movies]|that|have|a|{TABLE} [rating]|high [higher]|than|the|average|{NE} [James Cameron]|film|{TABLE} [rating]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "have",
            "a",
            "{TABLE}",
            "high",
            "than",
            "the",
            "average",
            "{NE}",
            "film",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")"
    },
    {
        "original_nl": "What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?",
        "generalized_nl": "What|is|the|{TABLE} [reviewer]|{COLUMN} [name]|film|{COLUMN} [title]|{TABLE} [movie]|{TABLE} [rating]|and|{COLUMN} [rating date]|for|every|{TABLE} [movie]|order [ordered]|by|{TABLE} [reviewer]|{COLUMN} [name]|{TABLE} [movie]|{COLUMN} [title]|then|finally|{TABLE} [rating]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{TABLE}",
            "{COLUMN}",
            "film",
            "{COLUMN}",
            "{TABLE}",
            "{TABLE}",
            "and",
            "{COLUMN}",
            "for",
            "every",
            "{TABLE}",
            "order",
            "by",
            "{TABLE}",
            "{COLUMN}",
            "{TABLE}",
            "{COLUMN}",
            "then",
            "finally",
            "{TABLE}"
        ],
        "original_sql": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"
    },
    {
        "original_nl": "Find the names of all reviewers who have contributed three or more ratings.",
        "generalized_nl": "find [Find]|the|{COLUMN} [names]|of|all|{TABLE} [reviewers]|who|have|contribute [contributed]|{NUMBER} [three]|or|more|{TABLE} [ratings]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "who",
            "have",
            "contribute",
            "{NUMBER}",
            "or",
            "more",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"
    },
    {
        "original_nl": "What are the names of all reviewers that have rated 3 or more movies?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{TABLE} [reviewers]|that|have|rat [rated]|{NUMBER} [3]|or|more|{TABLE} [movies]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "have",
            "rat",
            "{NUMBER}",
            "or",
            "more",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"
    },
    {
        "original_nl": "Find the names of all reviewers who rated Gone with the Wind.",
        "generalized_nl": "find [Find]|the|{COLUMN} [names]|of|all|{TABLE} [reviewers]|who|rat [rated]|{NE} [Gone with the Wind]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "who",
            "rat",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'"
    },
    {
        "original_nl": "What are the names of all the different reviewers who rates Gone with the Wind?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|the|different|{TABLE} [reviewers]|who|rat [rates]|{NE} [Gone with the Wind]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "the",
            "different",
            "{TABLE}",
            "who",
            "rat",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'"
    },
    {
        "original_nl": "Find the names of all directors whose movies are rated by Sarah Martinez.",
        "generalized_nl": "find [Find]|the|{COLUMN} [names]|of|all|{COLUMN} [directors]|whose|{TABLE} [movies]|are|rat [rated]|by|{NE} [Sarah Martinez]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{COLUMN}",
            "whose",
            "{TABLE}",
            "are",
            "rat",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"
    },
    {
        "original_nl": "What are the names of all directors whose movies have been reviewed by Sarah Martinez?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{COLUMN} [directors]|whose|{TABLE} [movies]|have|been|review [reviewed]|by|{NE} [Sarah Martinez]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{COLUMN}",
            "whose",
            "{TABLE}",
            "have",
            "been",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"
    },
    {
        "original_nl": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.",
        "generalized_nl": "For|any|{TABLE} [rating]|where|the|{COLUMN} [name]|of|{TABLE} [reviewer]|is|the|same|as|the|{COLUMN} [director]|of|the|{TABLE} [movie]|return|the|{TABLE} [reviewer]|{COLUMN} [name]|{TABLE} [movie]|{COLUMN} [title]|and|number|of|{COLUMN} [stars]",
        "generalized_tokens": [
            "For",
            "any",
            "{TABLE}",
            "where",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "is",
            "the",
            "same",
            "as",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "return",
            "the",
            "{TABLE}",
            "{COLUMN}",
            "{TABLE}",
            "{COLUMN}",
            "and",
            "number",
            "of",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
    },
    {
        "original_nl": "What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director?",
        "generalized_nl": "What|are|the|different|{TABLE} [reviewer]|{COLUMN} [names]|{TABLE} [movie]|{COLUMN} [titles]|and|{COLUMN} [stars]|for|every|{TABLE} [rating]|where|the|{TABLE} [reviewer]|have [had]|the|same|{COLUMN} [name]|as|the|{COLUMN} [director]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "different",
            "{TABLE}",
            "{COLUMN}",
            "{TABLE}",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "for",
            "every",
            "{TABLE}",
            "where",
            "the",
            "{TABLE}",
            "have",
            "the",
            "same",
            "{COLUMN}",
            "as",
            "the",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
    },
    {
        "original_nl": "Return all reviewer names and movie names together in a single list.",
        "generalized_nl": "return [Return]|all|{TABLE} [reviewer]|{COLUMN} [names]|and|{TABLE} [movie]|{COLUMN} [names]|together|in|a|single|list",
        "generalized_tokens": [
            "return",
            "all",
            "{TABLE}",
            "{COLUMN}",
            "and",
            "{TABLE}",
            "{COLUMN}",
            "together",
            "in",
            "a",
            "single",
            "list"
        ],
        "original_sql": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"
    },
    {
        "original_nl": "What are the names of all the reviewers and movie names?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|the|{TABLE} [reviewers]|and|{TABLE} [movie]|{COLUMN} [names]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "the",
            "{TABLE}",
            "and",
            "{TABLE}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"
    },
    {
        "original_nl": "Find the titles of all movies not reviewed by Chris Jackson.",
        "generalized_nl": "find [Find]|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|not|review [reviewed]|by|{NE} [Chris Jackson]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "not",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'"
    },
    {
        "original_nl": "What are the titles of all movies that were not reviewed by Chris Jackson?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|that|were|not|review [reviewed]|by|{NE} [Chris Jackson]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "were",
            "not",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'"
    },
    {
        "original_nl": "For all directors who have directed more than one movie, what movies have they directed and what are their names?",
        "generalized_nl": "For|all|{COLUMN} [directors]|who|have|direct [directed]|{NUMBER} [more than one]|{TABLE} [movie]|what|{TABLE} [movies]|have|they|direct [directed]|and|what|are|their|{COLUMN} [names]",
        "generalized_tokens": [
            "For",
            "all",
            "{COLUMN}",
            "who",
            "have",
            "direct",
            "{NUMBER}",
            "{TABLE}",
            "what",
            "{TABLE}",
            "have",
            "they",
            "direct",
            "and",
            "what",
            "are",
            "their",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
    },
    {
        "original_nl": "For directors who had more than one movie, return the titles and produced years of all movies directed by them.",
        "generalized_nl": "For|{COLUMN} [directors]|who|have [had]|{NUMBER} [more than one]|{TABLE} [movie]|return|the|{COLUMN} [titles]|and|produce [produced]|{COLUMN} [years]|of|all|{TABLE} [movies]|direct [directed]|by|them",
        "generalized_tokens": [
            "For",
            "{COLUMN}",
            "who",
            "have",
            "{NUMBER}",
            "{TABLE}",
            "return",
            "the",
            "{COLUMN}",
            "and",
            "produce",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "direct",
            "by",
            "them"
        ],
        "original_sql": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
    },
    {
        "original_nl": "For each director who directed more than one movie, what are the titles and dates of release for all those movies?",
        "generalized_nl": "For|each|{COLUMN} [director]|who|direct [directed]|{NUMBER} [more than one]|{TABLE} [movie]|what|are|the|{COLUMN} [titles]|and|{COLUMN_PART} [dates]|of|release|for|all|those|{TABLE} [movies]",
        "generalized_tokens": [
            "For",
            "each",
            "{COLUMN}",
            "who",
            "direct",
            "{NUMBER}",
            "{TABLE}",
            "what",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "of",
            "release",
            "for",
            "all",
            "those",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
    },
    {
        "original_nl": "What are the names of the directors who made exactly one movie?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|the|{COLUMN} [directors]|who|make [made]|precisely [exactly]|{NUMBER} [one]|{TABLE} [movie]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{COLUMN}",
            "who",
            "make",
            "precisely",
            "{NUMBER}",
            "{TABLE}"
        ],
        "original_sql": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"
    },
    {
        "original_nl": "What are the names of all directors who made one movie?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{COLUMN} [directors]|who|make [made]|{NUMBER} [one]|{TABLE} [movie]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{COLUMN}",
            "who",
            "make",
            "{NUMBER}",
            "{TABLE}"
        ],
        "original_sql": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"
    },
    {
        "original_nl": "What are the names of the directors who made exactly one movie excluding director NULL?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|the|{COLUMN} [directors]|who|make [made]|precisely [exactly]|{NUMBER} [one]|{TABLE} [movie]|exclude [excluding]|{COLUMN} [director]|nothing [NULL]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{COLUMN}",
            "who",
            "make",
            "precisely",
            "{NUMBER}",
            "{TABLE}",
            "exclude",
            "{COLUMN}",
            "nothing"
        ],
        "original_sql": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"
    },
    {
        "original_nl": "What are the names of all directors who have made one movie except for the director named NULL?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{COLUMN} [directors]|who|have|make [made]|{NUMBER} [one]|{TABLE} [movie]|except|for|the|{COLUMN} [director]|name [named]|NULL",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{COLUMN}",
            "who",
            "have",
            "make",
            "{NUMBER}",
            "{TABLE}",
            "except",
            "for",
            "the",
            "{COLUMN}",
            "name",
            "NULL"
        ],
        "original_sql": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"
    },
    {
        "original_nl": "How many movie reviews does each director get?",
        "generalized_nl": "How|many|{TABLE} [movie]|review [reviews]|does|each|{COLUMN} [director]|get",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "review",
            "does",
            "each",
            "{COLUMN}",
            "get"
        ],
        "original_sql": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"
    },
    {
        "original_nl": "For each director, how many reviews have they received?",
        "generalized_nl": "For|each|{COLUMN} [director]|how|many|review [reviews]|have|they|receive [received]",
        "generalized_tokens": [
            "For",
            "each",
            "{COLUMN}",
            "how",
            "many",
            "review",
            "have",
            "they",
            "receive"
        ],
        "original_sql": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"
    },
    {
        "original_nl": "What are the movie titles with the highest average rating and what are those ratings?",
        "generalized_nl": "What|are|the|{TABLE} [movie]|{COLUMN} [titles]|with|the|high [highest]|average|{TABLE} [rating]|and|what|are|those|{TABLE} [ratings]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{TABLE}",
            "{COLUMN}",
            "with",
            "the",
            "high",
            "average",
            "{TABLE}",
            "and",
            "what",
            "are",
            "those",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
    },
    {
        "original_nl": "What are the movie titles and average rating of the movies with the lowest average rating?",
        "generalized_nl": "What|are|the|{TABLE} [movie]|{COLUMN} [titles]|and|average|{TABLE} [rating]|of|the|{TABLE} [movies]|with|the|low [lowest]|average|{TABLE} [rating]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{TABLE}",
            "{COLUMN}",
            "and",
            "average",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "low",
            "average",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
    },
    {
        "original_nl": "What are the titles and average ratings for all movies that have the lowest average rating?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|and|average|{TABLE} [ratings]|for|all|{TABLE} [movies]|that|have|the|low [lowest]|average|{TABLE} [rating]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "average",
            "{TABLE}",
            "for",
            "all",
            "{TABLE}",
            "that",
            "have",
            "the",
            "low",
            "average",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
    },
    {
        "original_nl": "What are the names and years of the movies that has the top 3 highest rating star?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|and|{COLUMN} [years]|of|the|{TABLE} [movies]|that|have [has]|the|top|{NUMBER} [3]|high [highest]|{COLUMN} [rating star]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "have",
            "the",
            "top",
            "{NUMBER}",
            "high",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
    },
    {
        "original_nl": "What are the names and years released for the movies with the top 3 highest ratings?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|and|{COLUMN} [years]|free [released]|for|the|{TABLE} [movies]|with|the|top|{NUMBER} [3]|high [highest]|{TABLE} [ratings]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "free",
            "for",
            "the",
            "{TABLE}",
            "with",
            "the",
            "top",
            "{NUMBER}",
            "high",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
    },
    {
        "original_nl": "For each director, what are the titles and ratings for all the movies they reviewed?",
        "generalized_nl": "For|each|{COLUMN} [director]|what|are|the|{COLUMN} [titles]|and|{TABLE} [ratings]|for|all|the|{TABLE} [movies]|they|review [reviewed]",
        "generalized_tokens": [
            "For",
            "each",
            "{COLUMN}",
            "what",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "{TABLE}",
            "for",
            "all",
            "the",
            "{TABLE}",
            "they",
            "review"
        ],
        "original_sql": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"
    },
    {
        "original_nl": "Find the title and star rating of the movie that got the least rating star for each reviewer.",
        "generalized_nl": "find [Find]|the|{COLUMN} [title]|and|{COLUMN} [star]|{TABLE} [rating]|of|the|{TABLE} [movie]|that|get [got]|the|least|{COLUMN} [rating star]|for|each|{TABLE} [reviewer]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN}",
            "{TABLE}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "get",
            "the",
            "least",
            "{COLUMN}",
            "for",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"
    },
    {
        "original_nl": "For each reviewer id, what is the title and rating for the movie with the smallest rating?",
        "generalized_nl": "For|each|{COLUMN} [reviewer id]|what|is|the|{COLUMN} [title]|and|{TABLE} [rating]|for|the|{TABLE} [movie]|with|the|small [smallest]|{TABLE} [rating]",
        "generalized_tokens": [
            "For",
            "each",
            "{COLUMN}",
            "what",
            "is",
            "the",
            "{COLUMN}",
            "and",
            "{TABLE}",
            "for",
            "the",
            "{TABLE}",
            "with",
            "the",
            "small",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"
    },
    {
        "original_nl": "Find the title and score of the movie with the lowest rating among all movies directed by each director.",
        "generalized_nl": "find [Find]|the|{COLUMN} [title]|and|score|of|the|{TABLE} [movie]|with|the|low [lowest]|{TABLE} [rating]|among|all|{TABLE} [movies]|direct [directed]|by|each|{COLUMN} [director]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "and",
            "score",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "low",
            "{TABLE}",
            "among",
            "all",
            "{TABLE}",
            "direct",
            "by",
            "each",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"
    },
    {
        "original_nl": "For each director, what is the title and score of their most poorly rated movie?",
        "generalized_nl": "For|each|{COLUMN} [director]|what|is|the|{COLUMN} [title]|and|score|of|their|most|ill [poorly]|rat [rated]|{TABLE} [movie]",
        "generalized_tokens": [
            "For",
            "each",
            "{COLUMN}",
            "what",
            "is",
            "the",
            "{COLUMN}",
            "and",
            "score",
            "of",
            "their",
            "most",
            "ill",
            "rat",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"
    },
    {
        "original_nl": "What is the name of the movie that is rated by most of times?",
        "generalized_nl": "What|is|the|{COLUMN} [name]|of|the|{TABLE} [movie]|that|is|rat [rated]|by|most|of|time [times]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "is",
            "rat",
            "by",
            "most",
            "of",
            "time"
        ],
        "original_sql": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What is the name of the movie that has been reviewed the most?",
        "generalized_nl": "What|is|the|{COLUMN} [name]|of|the|{TABLE} [movie]|that|has|been|review [reviewed]|the|most",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "has",
            "been",
            "review",
            "the",
            "most"
        ],
        "original_sql": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What are the titles of all movies that have rating star is between 3 and 5?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|that|have|{COLUMN} [rating star]|is|between|{NUMBER} [3]|and|{NUMBER} [5]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "have",
            "{COLUMN}",
            "is",
            "between",
            "{NUMBER}",
            "and",
            "{NUMBER}"
        ],
        "original_sql": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"
    },
    {
        "original_nl": "What are the titles of all movies that have between 3 and 5 stars?",
        "generalized_nl": "What|are|the|{COLUMN} [titles]|of|all|{TABLE} [movies]|that|have|between|{NUMBER} [3]|and|{NUMBER} [5]|{COLUMN} [stars]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "have",
            "between",
            "{NUMBER}",
            "and",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"
    },
    {
        "original_nl": "Find the names of reviewers who had given higher than 3 star ratings.",
        "generalized_nl": "find [Find]|the|{COLUMN} [names]|of|{TABLE} [reviewers]|who|had|give [given]|{NUMBER} [higher than 3]|{COLUMN} [star]|{TABLE} [ratings]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "who",
            "had",
            "give",
            "{NUMBER}",
            "{COLUMN}",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"
    },
    {
        "original_nl": "What are the names of the reviewers who have rated a movie more than 3 stars before?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|the|{TABLE} [reviewers]|who|have|rat [rated]|a|{TABLE} [movie]|{NUMBER} [more than 3]|{COLUMN} [stars]|earlier [before]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "have",
            "rat",
            "a",
            "{TABLE}",
            "{NUMBER}",
            "{COLUMN}",
            "earlier"
        ],
        "original_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"
    },
    {
        "original_nl": "Find the average rating star for each movie that are not reviewed by Brittany Harris.",
        "generalized_nl": "find [Find]|the|average|{COLUMN} [rating star]|for|each|{TABLE} [movie]|that|are|not|review [reviewed]|by|{NE} [Brittany Harris]",
        "generalized_tokens": [
            "find",
            "the",
            "average",
            "{COLUMN}",
            "for",
            "each",
            "{TABLE}",
            "that",
            "are",
            "not",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID"
    },
    {
        "original_nl": "What is the average rating for each movie that has never been reviewed by Brittany Harris?",
        "generalized_nl": "What|is|the|average|{TABLE} [rating]|for|each|{TABLE} [movie]|that|has|never|been|review [reviewed]|by|{NE} [Brittany Harris]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{TABLE}",
            "for",
            "each",
            "{TABLE}",
            "that",
            "has",
            "never",
            "been",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID"
    },
    {
        "original_nl": "What are the ids of the movies that are not reviewed by Brittany Harris.",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|{TABLE} [movies]|that|are|not|review [reviewed]|by|{NE} [Brittany Harris]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "are",
            "not",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\""
    },
    {
        "original_nl": "What are the ids of all moviest hat have not been reviewed by Britanny Harris?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|all|moviest|hat|have|not|been|review [reviewed]|by|{NE} [Britanny Harris]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "moviest",
            "hat",
            "have",
            "not",
            "been",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\""
    },
    {
        "original_nl": "Find the average rating star for each movie that received at least 2 ratings.",
        "generalized_nl": "find [Find]|the|average|{COLUMN} [rating star]|for|each|{TABLE} [movie]|that|receive [received]|{NUMBER} [at least 2]|{TABLE} [ratings]",
        "generalized_tokens": [
            "find",
            "the",
            "average",
            "{COLUMN}",
            "for",
            "each",
            "{TABLE}",
            "that",
            "receive",
            "{NUMBER}",
            "{TABLE}"
        ],
        "original_sql": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"
    },
    {
        "original_nl": "For each movie that received more than 3 reviews, what is the average rating?",
        "generalized_nl": "For|each|{TABLE} [movie]|that|receive [received]|{NUMBER} [more than 3]|review [reviews]|what|is|the|average|{TABLE} [rating]",
        "generalized_tokens": [
            "For",
            "each",
            "{TABLE}",
            "that",
            "receive",
            "{NUMBER}",
            "review",
            "what",
            "is",
            "the",
            "average",
            "{TABLE}"
        ],
        "original_sql": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"
    },
    {
        "original_nl": "find the ids of reviewers who did not give 4 star.",
        "generalized_nl": "find|the|{COLUMN_PART} [ids]|of|{TABLE} [reviewers]|who|did|not|give|{NUMBER} [4]|{COLUMN} [star]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "did",
            "not",
            "give",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"
    },
    {
        "original_nl": "What are the ids of all reviewers who did not give 4 stars?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|all|{TABLE} [reviewers]|who|did|not|give|{NUMBER} [4]|{COLUMN} [stars]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}",
            "who",
            "did",
            "not",
            "give",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"
    },
    {
        "original_nl": "Find the ids of reviewers who didn't only give 4 star.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [ids]|of|{TABLE} [reviewers]|who|did|n't|only|give|{NUMBER} [4]|{COLUMN} [star]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "did",
            "n't",
            "only",
            "give",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT rID FROM Rating WHERE stars != 4"
    },
    {
        "original_nl": "What are the ids of all reviewers who have not given 4 stars at least once?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|all|{TABLE} [reviewers]|who|have|not|give [given]|{NUMBER} [4]|{COLUMN} [stars]|at|least|once",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "{TABLE}",
            "who",
            "have",
            "not",
            "give",
            "{NUMBER}",
            "{COLUMN}",
            "at",
            "least",
            "once"
        ],
        "original_sql": "SELECT rID FROM Rating WHERE stars != 4"
    },
    {
        "original_nl": "What are names of the movies that are either made after 2000 or reviewed by Brittany Harris?",
        "generalized_nl": "What|are|{COLUMN} [names]|of|the|{TABLE} [movies]|that|are|either|make [made]|after|{NE} [2000]|or|review [reviewed]|by|{NE} [Brittany Harris]",
        "generalized_tokens": [
            "What",
            "are",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "are",
            "either",
            "make",
            "after",
            "{NE}",
            "or",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"
    },
    {
        "original_nl": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{TABLE} [movies]|that|were|make [made]|after|{NE} [2000]|or|review [reviewed]|by|{NE} [Brittany Harris]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "were",
            "make",
            "after",
            "{NE}",
            "or",
            "review",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"
    },
    {
        "original_nl": "What are names of the movies that are either made before 1980 or directed by James Cameron?",
        "generalized_nl": "What|are|{COLUMN} [names]|of|the|{TABLE} [movies]|that|are|either|make [made]|before|{NE} [1980]|or|direct [directed]|by|{NE} [James Cameron]",
        "generalized_tokens": [
            "What",
            "are",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "are",
            "either",
            "make",
            "before",
            "{NE}",
            "or",
            "direct",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"
    },
    {
        "original_nl": "What are the names of all movies made before 1980 or had James Cameron as the director?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{TABLE} [movies]|make [made]|before|{NE} [1980]|or|have [had]|{NE} [James Cameron]|as|the|{COLUMN} [director]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "make",
            "before",
            "{NE}",
            "or",
            "have",
            "{NE}",
            "as",
            "the",
            "{COLUMN}"
        ],
        "original_sql": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"
    },
    {
        "original_nl": "What are the names of reviewers who had rated 3 star and 4 star?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|{TABLE} [reviewers]|who|had|rat [rated]|{NUMBER} [3]|{COLUMN} [star]|and|{NUMBER} [4]|{COLUMN} [star]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "who",
            "had",
            "rat",
            "{NUMBER}",
            "{COLUMN}",
            "and",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"
    },
    {
        "original_nl": "What are the names of all reviewers that have given 3 or 4 stars for reviews?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{TABLE} [reviewers]|that|have|give [given]|{NUMBER} [3]|or|{NUMBER} [4]|{COLUMN} [stars]|for|review [reviews]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "have",
            "give",
            "{NUMBER}",
            "or",
            "{NUMBER}",
            "{COLUMN}",
            "for",
            "review"
        ],
        "original_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"
    },
    {
        "original_nl": "What are the names of movies that get 3 star and 4 star?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|{TABLE} [movies]|that|get|{NUMBER} [3]|{COLUMN} [star]|and|{NUMBER} [4]|{COLUMN} [star]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "that",
            "get",
            "{NUMBER}",
            "{COLUMN}",
            "and",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"
    },
    {
        "original_nl": "What are the names of all movies that received 3 or 4 stars?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|all|{TABLE} [movies]|that|receive [received]|{NUMBER} [3]|or|{NUMBER} [4]|{COLUMN} [stars]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}",
            "that",
            "receive",
            "{NUMBER}",
            "or",
            "{NUMBER}",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"
    }
]