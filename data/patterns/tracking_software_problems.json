[
    {
        "original_nl": "What is the id of the problem log that is created most recently?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [id]|of|the|{TABLE} [problem log]|that|is|create [created]|most|recently",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "is",
            "create",
            "most",
            "recently"
        ],
        "original_sql": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
    },
    {
        "original_nl": "What is the oldest log id and its corresponding problem id?",
        "generalized_nl": "What|is|the|old [oldest]|{COLUMN_PART} [log]|{COLUMN_PART} [id]|and|its|match [corresponding]|{COLUMN} [problem id]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "old",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "its",
            "match",
            "{COLUMN}"
        ],
        "original_sql": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"
    },
    {
        "original_nl": "Find the oldest log id and its corresponding problem id.",
        "generalized_nl": "find [Find]|the|old [oldest]|{COLUMN_PART} [log]|{COLUMN_PART} [id]|and|its|match [corresponding]|{COLUMN} [problem id]",
        "generalized_tokens": [
            "find",
            "the",
            "old",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "its",
            "match",
            "{COLUMN}"
        ],
        "original_sql": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"
    },
    {
        "original_nl": "Find all the ids and dates of the logs for the problem whose id is 10.",
        "generalized_nl": "find [Find]|all|the|{COLUMN_PART} [ids]|and|{COLUMN_PART} [dates]|of|the|log [logs]|for|the|{TABLE} [problem]|whose|{COLUMN_PART} [id]|is|{NUMBER} [10]",
        "generalized_tokens": [
            "find",
            "all",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "the",
            "log",
            "for",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "is",
            "{NUMBER}"
        ],
        "original_sql": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
    },
    {
        "original_nl": "For the problem with id 10, return the ids and dates of its problem logs.",
        "generalized_nl": "For|the|{TABLE} [problem]|with|{COLUMN_PART} [id]|{NUMBER} [10]|return|the|{COLUMN_PART} [ids]|and|{COLUMN_PART} [dates]|of|its|{TABLE} [problem]|log [logs]",
        "generalized_tokens": [
            "For",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "{NUMBER}",
            "return",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "of",
            "its",
            "{TABLE}",
            "log"
        ],
        "original_sql": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
    },
    {
        "original_nl": "List all the log ids and their descriptions from the problem logs.",
        "generalized_nl": "list [List]|all|the|{COLUMN_PART} [log]|{COLUMN_PART} [ids]|and|their|{COLUMN_PART} [descriptions]|from|the|{TABLE} [problem]|log [logs]",
        "generalized_tokens": [
            "list",
            "all",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "their",
            "{COLUMN_PART}",
            "from",
            "the",
            "{TABLE}",
            "log"
        ],
        "original_sql": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
    },
    {
        "original_nl": "What are the log id and entry description of each problem?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [log]|{COLUMN_PART} [id]|and|{COLUMN_PART} [entry]|{COLUMN_PART} [description]|of|each|{TABLE} [problem]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
    },
    {
        "original_nl": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [first]|and|{COLUMN_PART} [last]|{COLUMN_PART} [names]|of|all|distinct|{TABLE} [staff]|member [members]|who|are|{COLUMN_PART} [assigned]|to|the|{TABLE} [problem]|whose|{COLUMN_PART} [id]|is|{NUMBER} [1]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "all",
            "distinct",
            "{TABLE}",
            "member",
            "who",
            "are",
            "{COLUMN_PART}",
            "to",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "is",
            "{NUMBER}"
        ],
        "original_sql": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
    },
    {
        "original_nl": "List the problem id and log id which are assigned to the staff named Rylan Homenick.",
        "generalized_nl": "list [List]|the|{COLUMN} [problem id]|and|{COLUMN_PART} [log]|{COLUMN_PART} [id]|which|are|{COLUMN_PART} [assigned]|to|the|{TABLE} [staff]|name [named]|{NE} [Rylan Homenick]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "which",
            "are",
            "{COLUMN_PART}",
            "to",
            "the",
            "{TABLE}",
            "name",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""
    },
    {
        "original_nl": "Which problem id and log id are assigned to the staff named Rylan Homenick?",
        "generalized_nl": "Which|{COLUMN} [problem id]|and|{COLUMN_PART} [log]|{COLUMN_PART} [id]|are|{COLUMN_PART} [assigned]|to|the|{TABLE} [staff]|name [named]|{NE} [Rylan Homenick]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "are",
            "{COLUMN_PART}",
            "to",
            "the",
            "{TABLE}",
            "name",
            "{NE}"
        ],
        "original_sql": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""
    },
    {
        "original_nl": "How many problems are there for product voluptatem?",
        "generalized_nl": "How|many|{TABLE} [problems]|are|there|for|{TABLE} [product]|voluptatem",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "are",
            "there",
            "for",
            "{TABLE}",
            "voluptatem"
        ],
        "original_sql": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""
    },
    {
        "original_nl": "How many problems did the product called \"voluptatem\" have in record?",
        "generalized_nl": "How|many|{TABLE} [problems]|did|the|{TABLE} [product]|call [called]|voluptatem|have|in|record",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "did",
            "the",
            "{TABLE}",
            "call",
            "voluptatem",
            "have",
            "in",
            "record"
        ],
        "original_sql": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""
    },
    {
        "original_nl": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
        "generalized_nl": "give [Give]|me|a|list|of|{COLUMN_PART} [descriptions]|of|the|{TABLE} [problems]|that|are|{COLUMN_PART} [reported]|by|the|{TABLE} [staff]|whose|{COLUMN_PART} [first]|{COLUMN_PART} [name]|is|{NE} [Christop]",
        "generalized_tokens": [
            "give",
            "me",
            "a",
            "list",
            "of",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "are",
            "{COLUMN_PART}",
            "by",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "is",
            "{NE}"
        ],
        "original_sql": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\""
    },
    {
        "original_nl": "Find the ids of the problems that are reported by the staff whose last name is Bosco.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|that|are|{COLUMN_PART} [reported]|by|the|{TABLE} [staff]|whose|{COLUMN_PART} [last]|{COLUMN_PART} [name]|is|{NE} [Bosco]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "are",
            "{COLUMN_PART}",
            "by",
            "the",
            "{TABLE}",
            "whose",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "is",
            "{NE}"
        ],
        "original_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\""
    },
    {
        "original_nl": "What are the ids of the problems which are reported after 1978-06-26?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|which|are|{COLUMN_PART} [reported]|after|{NE} [1978 - 06-26]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "which",
            "are",
            "{COLUMN_PART}",
            "after",
            "{NE}"
        ],
        "original_sql": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
    },
    {
        "original_nl": "Find the ids of the problems reported after 1978-06-26.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|{COLUMN_PART} [reported]|after|{NE} [1978 - 06 - 26]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "after",
            "{NE}"
        ],
        "original_sql": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
    },
    {
        "original_nl": "What are the ids of the problems which are reported before 1978-06-26?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|which|are|{COLUMN_PART} [reported]|before|{NE} [1978 - 06-26]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "which",
            "are",
            "{COLUMN_PART}",
            "before",
            "{NE}"
        ],
        "original_sql": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""
    },
    {
        "original_nl": "For each product which has problems, what are the number of problems and the product id?",
        "generalized_nl": "For|each|{TABLE} [product]|which|have [has]|{TABLE} [problems]|what|are|the|number|of|{TABLE} [problems]|and|the|{COLUMN} [product id]",
        "generalized_tokens": [
            "For",
            "each",
            "{TABLE}",
            "which",
            "have",
            "{TABLE}",
            "what",
            "are",
            "the",
            "number",
            "of",
            "{TABLE}",
            "and",
            "the",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
    },
    {
        "original_nl": "For each product with some problems, list the count of problems and the product id.",
        "generalized_nl": "For|each|{TABLE} [product]|with|some|{TABLE} [problems]|list|the|count|of|{TABLE} [problems]|and|the|{COLUMN} [product id]",
        "generalized_tokens": [
            "For",
            "each",
            "{TABLE}",
            "with",
            "some",
            "{TABLE}",
            "list",
            "the",
            "count",
            "of",
            "{TABLE}",
            "and",
            "the",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
    },
    {
        "original_nl": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?",
        "generalized_nl": "For|each|{TABLE} [product]|that|have [has]|{TABLE} [problems]|find|the|number|of|{TABLE} [problems]|{COLUMN_PART} [reported]|after|{NE} [1986 - 11 - 13]|and|the|{COLUMN} [product id]",
        "generalized_tokens": [
            "For",
            "each",
            "{TABLE}",
            "that",
            "have",
            "{TABLE}",
            "find",
            "the",
            "number",
            "of",
            "{TABLE}",
            "{COLUMN_PART}",
            "after",
            "{NE}",
            "and",
            "the",
            "{COLUMN}"
        ],
        "original_sql": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"
    },
    {
        "original_nl": "List the names of all the distinct product names in alphabetical order?",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [names]|of|all|the|distinct|{COLUMN} [product names]|in|alphabetic [alphabetical]|order",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "of",
            "all",
            "the",
            "distinct",
            "{COLUMN}",
            "in",
            "alphabetic",
            "order"
        ],
        "original_sql": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
    },
    {
        "original_nl": "Sort all the distinct product names in alphabetical order.",
        "generalized_nl": "screen [Sort]|all|the|distinct|{COLUMN} [product names]|in|alphabetic [alphabetical]|order",
        "generalized_tokens": [
            "screen",
            "all",
            "the",
            "distinct",
            "{COLUMN}",
            "in",
            "alphabetic",
            "order"
        ],
        "original_sql": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
    },
    {
        "original_nl": "List all the distinct product names ordered by product id?",
        "generalized_nl": "list [List]|all|the|distinct|{COLUMN} [product names]|order [ordered]|by|{COLUMN} [product id]",
        "generalized_tokens": [
            "list",
            "all",
            "the",
            "distinct",
            "{COLUMN}",
            "order",
            "by",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
    },
    {
        "original_nl": "What is the list of distinct product names sorted by product id?",
        "generalized_nl": "What|is|the|list|of|distinct|{COLUMN} [product names]|screen [sorted]|by|{COLUMN} [product id]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "list",
            "of",
            "distinct",
            "{COLUMN}",
            "screen",
            "by",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
    },
    {
        "original_nl": "What are the id of problems reported by the staff named Dameon Frami or Jolie Weber?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [id]|of|{TABLE} [problems]|{COLUMN_PART} [reported]|by|the|{TABLE} [staff]|name [named]|{NE} [Dameon Frami]|or|{NE} [Jolie Weber]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "the",
            "{TABLE}",
            "name",
            "{NE}",
            "or",
            "{NE}"
        ],
        "original_sql": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\""
    },
    {
        "original_nl": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?",
        "generalized_nl": "What|are|the|{COLUMN} [product ids]|for|the|{TABLE} [problems]|{COLUMN_PART} [reported]|by|{NE} [Christop Berge]|with|{COLUMN_PART} [closure]|{COLUMN_PART} [authorised]|by|{NE} [Ashley Medhurst]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "for",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "{NE}",
            "with",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\""
    },
    {
        "original_nl": "What are the ids of the problems reported before the date of any problem reported by Lysanne Turcotte?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|{COLUMN_PART} [reported]|before|the|{COLUMN_PART} [date]|of|any|{TABLE} [problem]|{COLUMN_PART} [reported]|by|{NE} [Lysanne Turcotte]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "before",
            "the",
            "{COLUMN_PART}",
            "of",
            "any",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )"
    },
    {
        "original_nl": "What are the ids of the problems reported after the date of any problems reported by Rylan Homenick?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|{COLUMN_PART} [reported]|after|the|{COLUMN_PART} [date]|of|any|{TABLE} [problems]|{COLUMN_PART} [reported]|by|{NE} [Rylan Homenick]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "after",
            "the",
            "{COLUMN_PART}",
            "of",
            "any",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "{NE}"
        ],
        "original_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )"
    },
    {
        "original_nl": "Find the ids of the problems reported after the date of any problems reported by the staff Rylan Homenick.",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|{COLUMN_PART} [reported]|after|the|{COLUMN_PART} [date]|of|any|{TABLE} [problems]|{COLUMN_PART} [reported]|by|the|{TABLE} [staff]|{NE} [Rylan Homenick]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "{COLUMN_PART}",
            "after",
            "the",
            "{COLUMN_PART}",
            "of",
            "any",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "the",
            "{TABLE}",
            "{NE}"
        ],
        "original_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )"
    },
    {
        "original_nl": "Find the top 3 products which have the largest number of problems?",
        "generalized_nl": "find [Find]|the|top|{NUMBER} [3]|{TABLE} [products]|which|have|the|large [largest]|number|of|{TABLE} [problems]",
        "generalized_tokens": [
            "find",
            "the",
            "top",
            "{NUMBER}",
            "{TABLE}",
            "which",
            "have",
            "the",
            "large",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "original_nl": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?",
        "generalized_nl": "list [List]|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|from|the|{TABLE} [product]|voluptatem|that|are|{COLUMN_PART} [reported]|after|{NE} [1995]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "from",
            "the",
            "{TABLE}",
            "voluptatem",
            "that",
            "are",
            "{COLUMN_PART}",
            "after",
            "{NE}"
        ],
        "original_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""
    },
    {
        "original_nl": "What are the ids of the problems that are from the product \"voluptatem\" and are reported after 1995?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [ids]|of|the|{TABLE} [problems]|that|are|from|the|{TABLE} [product]|voluptatem|and|are|{COLUMN_PART} [reported]|after|{NE} [1995]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "that",
            "are",
            "from",
            "the",
            "{TABLE}",
            "voluptatem",
            "and",
            "are",
            "{COLUMN_PART}",
            "after",
            "{NE}"
        ],
        "original_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""
    },
    {
        "original_nl": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?",
        "generalized_nl": "find [Find]|the|{COLUMN_PART} [first]|and|{COLUMN_PART} [last]|{COLUMN_PART} [name]|of|the|{TABLE} [staff]|member [members]|who|{COLUMN_PART} [reported]|{TABLE} [problems]|from|the|{TABLE} [product]|paradoxical_sleep [rem]|but|not|aut",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN_PART}",
            "and",
            "{COLUMN_PART}",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "member",
            "who",
            "{COLUMN_PART}",
            "{TABLE}",
            "from",
            "the",
            "{TABLE}",
            "paradoxical_sleep",
            "but",
            "not",
            "aut"
        ],
        "original_sql": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
    },
    {
        "original_nl": "Find the products which have problems reported by both Lacey Bosco and Kenton Champlin?",
        "generalized_nl": "find [Find]|the|{TABLE} [products]|which|have|{TABLE} [problems]|{COLUMN_PART} [reported]|by|both|{NE} [Lacey Bosco]|and|{NE} [Kenton Champlin]",
        "generalized_tokens": [
            "find",
            "the",
            "{TABLE}",
            "which",
            "have",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "both",
            "{NE}",
            "and",
            "{NE}"
        ],
        "original_sql": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""
    },
    {
        "original_nl": "Which products have problems reported by both the staff named Lacey Bosco and the staff named Kenton Champlin?",
        "generalized_nl": "Which|{TABLE} [products]|have|{TABLE} [problems]|{COLUMN_PART} [reported]|by|both|the|{TABLE} [staff]|name [named]|{NE} [Lacey Bosco]|and|the|{TABLE} [staff]|name [named]|{NE} [Kenton Champlin]",
        "generalized_tokens": [
            "Which",
            "{TABLE}",
            "have",
            "{TABLE}",
            "{COLUMN_PART}",
            "by",
            "both",
            "the",
            "{TABLE}",
            "name",
            "{NE}",
            "and",
            "the",
            "{TABLE}",
            "name",
            "{NE}"
        ],
        "original_sql": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""
    }
]