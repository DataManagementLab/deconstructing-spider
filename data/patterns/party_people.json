[
    {
        "original_nl": "How many regions do we have?",
        "generalized_nl": "How|many|{TABLE} [regions]|do|we|have",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "do",
            "we",
            "have"
        ],
        "original_sql": "SELECT count(*) FROM region"
    },
    {
        "original_nl": "Count the number of regions.",
        "generalized_nl": "count [Count]|the|number|of|{TABLE} [regions]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(*) FROM region"
    },
    {
        "original_nl": "Show all distinct region names ordered by their labels.",
        "generalized_nl": "show [Show]|all|distinct|{COLUMN} [region names]|order [ordered]|by|their|{COLUMN} [labels]",
        "generalized_tokens": [
            "show",
            "all",
            "distinct",
            "{COLUMN}",
            "order",
            "by",
            "their",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT region_name FROM region ORDER BY Label"
    },
    {
        "original_nl": "What are the different region names, ordered by labels?",
        "generalized_nl": "What|are|the|different|{COLUMN} [region names]|order [ordered]|by|{COLUMN} [labels]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "different",
            "{COLUMN}",
            "order",
            "by",
            "{COLUMN}"
        ],
        "original_sql": "SELECT DISTINCT region_name FROM region ORDER BY Label"
    },
    {
        "original_nl": "How many parties do we have?",
        "generalized_nl": "How|many|{TABLE} [parties]|do|we|have",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "do",
            "we",
            "have"
        ],
        "original_sql": "SELECT count(DISTINCT party_name) FROM party"
    },
    {
        "original_nl": "Count the number of different parties.",
        "generalized_nl": "count [Count]|the|number|of|different|{TABLE} [parties]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "different",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(DISTINCT party_name) FROM party"
    },
    {
        "original_nl": "Show the ministers and the time they took and left office, listed by the time they left office.",
        "generalized_nl": "show [Show]|the|{COLUMN} [ministers]|and|the|time|they|{COLUMN_PART} [took]|and|{COLUMN} [left office]|list [listed]|by|the|time|they|{COLUMN} [left office]",
        "generalized_tokens": [
            "show",
            "the",
            "{COLUMN}",
            "and",
            "the",
            "time",
            "they",
            "{COLUMN_PART}",
            "and",
            "{COLUMN}",
            "list",
            "by",
            "the",
            "time",
            "they",
            "{COLUMN}"
        ],
        "original_sql": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
    },
    {
        "original_nl": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?",
        "generalized_nl": "Who|are|the|{COLUMN} [ministers]|when|did|they|take|{COLUMN_PART} [office]|and|when|did|they|leave|{COLUMN_PART} [office]|order [ordered]|by|when|they|{COLUMN} [left office]",
        "generalized_tokens": [
            "Who",
            "are",
            "the",
            "{COLUMN}",
            "when",
            "did",
            "they",
            "take",
            "{COLUMN_PART}",
            "and",
            "when",
            "did",
            "they",
            "leave",
            "{COLUMN_PART}",
            "order",
            "by",
            "when",
            "they",
            "{COLUMN}"
        ],
        "original_sql": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
    },
    {
        "original_nl": "Show the minister who took office after 1961 or before 1959.",
        "generalized_nl": "show [Show]|the|{COLUMN} [minister]|who|{COLUMN} [took office]|after|{VALUE} [1961]|or|before|{VALUE} [1959]",
        "generalized_tokens": [
            "show",
            "the",
            "{COLUMN}",
            "who",
            "{COLUMN}",
            "after",
            "{VALUE}",
            "or",
            "before",
            "{VALUE}"
        ],
        "original_sql": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
    },
    {
        "original_nl": "Who are the ministers who took office after 1961 or before 1959?",
        "generalized_nl": "Who|are|the|{COLUMN} [ministers]|who|{COLUMN} [took office]|after|{VALUE} [1961]|or|before|{VALUE} [1959]",
        "generalized_tokens": [
            "Who",
            "are",
            "the",
            "{COLUMN}",
            "who",
            "{COLUMN}",
            "after",
            "{VALUE}",
            "or",
            "before",
            "{VALUE}"
        ],
        "original_sql": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
    },
    {
        "original_nl": "Show all ministers who do not belong to Progress Party.",
        "generalized_nl": "show [Show]|all|{COLUMN} [ministers]|who|do|not|belong|to|{VALUE} [Progress Party]",
        "generalized_tokens": [
            "show",
            "all",
            "{COLUMN}",
            "who",
            "do",
            "not",
            "belong",
            "to",
            "{VALUE}"
        ],
        "original_sql": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
    },
    {
        "original_nl": "Which ministers are not a part of the Progress Party?",
        "generalized_nl": "Which|{COLUMN} [ministers]|are|not|a|part|of|{NE} [the Progress Party]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "are",
            "not",
            "a",
            "part",
            "of",
            "{NE}"
        ],
        "original_sql": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
    },
    {
        "original_nl": "Show all ministers and parties they belong to in descending order of the time they took office.",
        "generalized_nl": "show [Show]|all|{COLUMN} [ministers]|and|{TABLE} [parties]|they|belong|to|in|descend [descending]|order|of|the|time|they|{COLUMN} [took office]",
        "generalized_tokens": [
            "show",
            "all",
            "{COLUMN}",
            "and",
            "{TABLE}",
            "they",
            "belong",
            "to",
            "in",
            "descend",
            "order",
            "of",
            "the",
            "time",
            "they",
            "{COLUMN}"
        ],
        "original_sql": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
    },
    {
        "original_nl": "Who are the ministers and what parties do they belong to, listed descending by the times they took office?",
        "generalized_nl": "Who|are|the|{COLUMN} [ministers]|and|what|{TABLE} [parties]|do|they|belong|to|list [listed]|descend [descending]|by|the|time [times]|they|{COLUMN} [took office]",
        "generalized_tokens": [
            "Who",
            "are",
            "the",
            "{COLUMN}",
            "and",
            "what",
            "{TABLE}",
            "do",
            "they",
            "belong",
            "to",
            "list",
            "descend",
            "by",
            "the",
            "time",
            "they",
            "{COLUMN}"
        ],
        "original_sql": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
    },
    {
        "original_nl": "Return the minister who left office at the latest time.",
        "generalized_nl": "return [Return]|the|{COLUMN} [minister]|who|{COLUMN} [left office]|at|the|late [latest]|time",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "who",
            "{COLUMN}",
            "at",
            "the",
            "late",
            "time"
        ],
        "original_sql": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
    },
    {
        "original_nl": "Which minister left office the latest?",
        "generalized_nl": "Which|{COLUMN} [minister]|{COLUMN} [left office]|the|late [latest]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "{COLUMN}",
            "the",
            "late"
        ],
        "original_sql": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
    },
    {
        "original_nl": "List member names and their party names.",
        "generalized_nl": "list [List]|{COLUMN} [member names]|and|their|{COLUMN} [party names]",
        "generalized_tokens": [
            "list",
            "{COLUMN}",
            "and",
            "their",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
    },
    {
        "original_nl": "What are the names of members and their corresponding parties?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|{TABLE} [members]|and|their|match [corresponding]|{TABLE} [parties]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "and",
            "their",
            "match",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
    },
    {
        "original_nl": "Show all party names and the number of members in each party.",
        "generalized_nl": "show [Show]|all|{COLUMN} [party names]|and|the|number|of|{TABLE} [members]|in|each|{TABLE} [party]",
        "generalized_tokens": [
            "show",
            "all",
            "{COLUMN}",
            "and",
            "the",
            "number",
            "of",
            "{TABLE}",
            "in",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "original_nl": "How many members are in each party?",
        "generalized_nl": "How|many|{TABLE} [members]|are|in|each|{TABLE} [party]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "are",
            "in",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "original_nl": "What is the name of party with most number of members?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [name]|of|{TABLE} [party]|with|most|number|of|{TABLE} [members]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "with",
            "most",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the name of the party with the most members.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [name]|of|the|{TABLE} [party]|with|the|most|{TABLE} [members]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "most",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Show all party names and their region names.",
        "generalized_nl": "show [Show]|all|{COLUMN} [party names]|and|their|{COLUMN} [region names]",
        "generalized_tokens": [
            "show",
            "all",
            "{COLUMN}",
            "and",
            "their",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
    },
    {
        "original_nl": "What are the names of parties and their respective regions?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|{TABLE} [parties]|and|their|respective|{TABLE} [regions]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "and",
            "their",
            "respective",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
    },
    {
        "original_nl": "Show names of parties that does not have any members.",
        "generalized_nl": "show [Show]|{COLUMN_PART} [names]|of|{TABLE} [parties]|that|does|not|have|any|{TABLE} [members]",
        "generalized_tokens": [
            "show",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "that",
            "does",
            "not",
            "have",
            "any",
            "{TABLE}"
        ],
        "original_sql": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
    },
    {
        "original_nl": "What are the names of parties that have no members?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|{TABLE} [parties]|that|have|no|{TABLE} [members]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "that",
            "have",
            "no",
            "{TABLE}"
        ],
        "original_sql": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
    },
    {
        "original_nl": "Show the member names which are in both the party with id 3 and the party with id 1.",
        "generalized_nl": "show [Show]|the|{COLUMN} [member names]|which|are|in|both|the|{TABLE} [party]|with|{COLUMN_PART} [id]|{VALUE} [3]|and|the|{TABLE} [party]|with|{COLUMN_PART} [id]|{VALUE} [1]",
        "generalized_tokens": [
            "show",
            "the",
            "{COLUMN}",
            "which",
            "are",
            "in",
            "both",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "{VALUE}",
            "and",
            "the",
            "{TABLE}",
            "with",
            "{COLUMN_PART}",
            "{VALUE}"
        ],
        "original_sql": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
    },
    {
        "original_nl": "Which member names are shared among members in the party with the id 3 and the party with the id 1?",
        "generalized_nl": "Which|{COLUMN} [member names]|are|share [shared]|among|{TABLE} [members]|in|the|{TABLE} [party]|with|the|{COLUMN_PART} [id]|{VALUE} [3]|and|the|{TABLE} [party]|with|the|{COLUMN_PART} [id]|{VALUE} [1]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "are",
            "share",
            "among",
            "{TABLE}",
            "in",
            "the",
            "{TABLE}",
            "with",
            "the",
            "{COLUMN_PART}",
            "{VALUE}",
            "and",
            "the",
            "{TABLE}",
            "with",
            "the",
            "{COLUMN_PART}",
            "{VALUE}"
        ],
        "original_sql": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
    },
    {
        "original_nl": "Show member names that are not in the Progress Party.",
        "generalized_nl": "show [Show]|{COLUMN} [member names]|that|are|not|in|{NE} [the Progress Party]",
        "generalized_tokens": [
            "show",
            "{COLUMN}",
            "that",
            "are",
            "not",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""
    },
    {
        "original_nl": "Which member names corresponding to members who are not in the Progress Party?",
        "generalized_nl": "Which|{COLUMN} [member names]|match [corresponding]|to|{TABLE} [members]|who|are|not|in|{NE} [the Progress Party]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "match",
            "to",
            "{TABLE}",
            "who",
            "are",
            "not",
            "in",
            "{NE}"
        ],
        "original_sql": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""
    },
    {
        "original_nl": "How many party events do we have?",
        "generalized_nl": "How|many|{TABLE} [party events]|do|we|have",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "do",
            "we",
            "have"
        ],
        "original_sql": "SELECT count(*) FROM party_events"
    },
    {
        "original_nl": "Count the number of party events.",
        "generalized_nl": "count [Count]|the|number|of|{TABLE} [party events]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(*) FROM party_events"
    },
    {
        "original_nl": "Show party names and the number of events for each party.",
        "generalized_nl": "show [Show]|{COLUMN} [party names]|and|the|number|of|event [events]|for|each|{TABLE} [party]",
        "generalized_tokens": [
            "show",
            "{COLUMN}",
            "and",
            "the",
            "number",
            "of",
            "event",
            "for",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "original_nl": "How many events are there for each party?",
        "generalized_nl": "How|many|event [events]|are|there|for|each|{TABLE} [party]",
        "generalized_tokens": [
            "How",
            "many",
            "event",
            "are",
            "there",
            "for",
            "each",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "original_nl": "Show all member names who are not in charge of any event.",
        "generalized_nl": "show [Show]|all|{COLUMN} [member names]|who|are|not|in|{COLUMN_PART} [charge]|of|any|{COLUMN_PART} [event]",
        "generalized_tokens": [
            "show",
            "all",
            "{COLUMN}",
            "who",
            "are",
            "not",
            "in",
            "{COLUMN_PART}",
            "of",
            "any",
            "{COLUMN_PART}"
        ],
        "original_sql": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
    },
    {
        "original_nl": "What are the names of members who are not in charge of any events?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|{TABLE} [members]|who|are|not|in|{COLUMN_PART} [charge]|of|any|event [events]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "who",
            "are",
            "not",
            "in",
            "{COLUMN_PART}",
            "of",
            "any",
            "event"
        ],
        "original_sql": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
    },
    {
        "original_nl": "What are the names of parties with at least 2 events?",
        "generalized_nl": "What|are|the|{COLUMN_PART} [names]|of|{TABLE} [parties]|with|{NUMBER} [at least 2]|event [events]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "with",
            "{NUMBER}",
            "event"
        ],
        "original_sql": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
    },
    {
        "original_nl": "Return the names of parties that have two or more events.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [names]|of|{TABLE} [parties]|that|have|{NUMBER} [two]|or|more|event [events]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "that",
            "have",
            "{NUMBER}",
            "or",
            "more",
            "event"
        ],
        "original_sql": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
    },
    {
        "original_nl": "What is the name of member in charge of greatest number of events?",
        "generalized_nl": "What|is|the|{COLUMN_PART} [name]|of|{TABLE} [member]|in|{COLUMN_PART} [charge]|of|great [greatest]|number|of|event [events]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN_PART}",
            "of",
            "{TABLE}",
            "in",
            "{COLUMN_PART}",
            "of",
            "great",
            "number",
            "of",
            "event"
        ],
        "original_sql": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the name of the member who is in charge of the most events.",
        "generalized_nl": "return [Return]|the|{COLUMN_PART} [name]|of|the|{TABLE} [member]|who|is|in|{COLUMN_PART} [charge]|of|the|most|event [events]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN_PART}",
            "of",
            "the",
            "{TABLE}",
            "who",
            "is",
            "in",
            "{COLUMN_PART}",
            "of",
            "the",
            "most",
            "event"
        ],
        "original_sql": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "original_nl": "find the event names that have more than 2 records.",
        "generalized_nl": "find|the|{COLUMN} [event names]|that|have|{NUMBER} [more than 2]|record [records]",
        "generalized_tokens": [
            "find",
            "the",
            "{COLUMN}",
            "that",
            "have",
            "{NUMBER}",
            "record"
        ],
        "original_sql": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
    },
    {
        "original_nl": "Which event names were used more than twice for party events?",
        "generalized_nl": "Which|{COLUMN} [event names]|were|use [used]|more|than|twice|for|{TABLE} [party events]",
        "generalized_tokens": [
            "Which",
            "{COLUMN}",
            "were",
            "use",
            "more",
            "than",
            "twice",
            "for",
            "{TABLE}"
        ],
        "original_sql": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
    },
    {
        "original_nl": "How many Annual Meeting events happened in the United Kingdom region?",
        "generalized_nl": "How|many|{NE} [Annual Meeting]|event [events]|happen [happened]|in|the|{VALUE} [United Kingdom]|{TABLE} [region]",
        "generalized_tokens": [
            "How",
            "many",
            "{NE}",
            "event",
            "happen",
            "in",
            "the",
            "{VALUE}",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""
    },
    {
        "original_nl": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.",
        "generalized_nl": "count [Count]|the|number|of|{NE} [Annual Meeting]|event [events]|that|{COLUMN_PART} [took]|place|in|the|{TABLE} [region]|of|{NE} [the United Kingdom]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{NE}",
            "event",
            "that",
            "{COLUMN_PART}",
            "place",
            "in",
            "the",
            "{TABLE}",
            "of",
            "{NE}"
        ],
        "original_sql": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""
    }
]