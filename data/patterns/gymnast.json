[
    {
        "original_nl": "How many gymnasts are there?",
        "generalized_nl": "How|many|{TABLE} [gymnasts]|are|there",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "are",
            "there"
        ],
        "original_sql": "SELECT count(*) FROM gymnast"
    },
    {
        "original_nl": "Count the number of gymnasts.",
        "generalized_nl": "count [Count]|the|number|of|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(*) FROM gymnast"
    },
    {
        "original_nl": "List the total points of gymnasts in descending order.",
        "generalized_nl": "list [List]|the|{COLUMN} [total points]|of|{TABLE} [gymnasts]|in|descend [descending]|order",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "in",
            "descend",
            "order"
        ],
        "original_sql": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
    },
    {
        "original_nl": "What are the total points for all gymnasts, ordered by total points descending?",
        "generalized_nl": "What|are|the|{COLUMN} [total points]|for|all|{TABLE} [gymnasts]|order [ordered]|by|{COLUMN} [total points]|descend [descending]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "for",
            "all",
            "{TABLE}",
            "order",
            "by",
            "{COLUMN}",
            "descend"
        ],
        "original_sql": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
    },
    {
        "original_nl": "List the total points of gymnasts in descending order of floor exercise points.",
        "generalized_nl": "list [List]|the|{COLUMN} [total points]|of|{TABLE} [gymnasts]|in|descend [descending]|order|of|{COLUMN} [floor exercise points]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "in",
            "descend",
            "order",
            "of",
            "{COLUMN}"
        ],
        "original_sql": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
    },
    {
        "original_nl": "What are the total points of gymnasts, ordered by their floor exercise points descending?",
        "generalized_nl": "What|are|the|{COLUMN} [total points]|of|{TABLE} [gymnasts]|order [ordered]|by|their|{COLUMN} [floor exercise points]|descend [descending]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "order",
            "by",
            "their",
            "{COLUMN}",
            "descend"
        ],
        "original_sql": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
    },
    {
        "original_nl": "What is the average horizontal bar points for all gymnasts?",
        "generalized_nl": "What|is|the|average|{COLUMN} [horizontal bar points]|for|all|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{COLUMN}",
            "for",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
    },
    {
        "original_nl": "Return the average horizontal bar points across all gymnasts.",
        "generalized_nl": "return [Return]|the|average|{COLUMN} [horizontal bar points]|across|all|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "return",
            "the",
            "average",
            "{COLUMN}",
            "across",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
    },
    {
        "original_nl": "What are the names of people in ascending alphabetical order?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|{TABLE} [people]|in|ascend [ascending]|alphabetic [alphabetical]|order",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "in",
            "ascend",
            "alphabetic",
            "order"
        ],
        "original_sql": "SELECT Name FROM People ORDER BY Name ASC"
    },
    {
        "original_nl": "Return the names of people, ordered alphabetically.",
        "generalized_nl": "return [Return]|the|{COLUMN} [names]|of|{TABLE} [people]|order [ordered]|alphabetically",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "order",
            "alphabetically"
        ],
        "original_sql": "SELECT Name FROM People ORDER BY Name ASC"
    },
    {
        "original_nl": "What are the names of gymnasts?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "original_nl": "Return the names of the gymnasts.",
        "generalized_nl": "return [Return]|the|{COLUMN} [names]|of|the|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "original_nl": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|{TABLE} [gymnasts]|whose|{COLUMN} [hometown]|is|not|{VALUE} [Santo Domingo]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "whose",
            "{COLUMN}",
            "is",
            "not",
            "{VALUE}"
        ],
        "original_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""
    },
    {
        "original_nl": "Return the names of gymnasts who did not grow up in Santo Domingo.",
        "generalized_nl": "return [Return]|the|{COLUMN} [names]|of|{TABLE} [gymnasts]|who|did|not|grow|up|in|{VALUE} [Santo Domingo]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "who",
            "did",
            "not",
            "grow",
            "up",
            "in",
            "{VALUE}"
        ],
        "original_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""
    },
    {
        "original_nl": "What is the age of the tallest person?",
        "generalized_nl": "What|is|the|{COLUMN} [age]|of|the|tall [tallest]|{TABLE} [person]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "tall",
            "{TABLE}"
        ],
        "original_sql": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
    },
    {
        "original_nl": "Return the age of the person with the greatest height.",
        "generalized_nl": "return [Return]|the|{COLUMN} [age]|of|the|{TABLE} [person]|with|the|great [greatest]|{COLUMN} [height]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "great",
            "{COLUMN}"
        ],
        "original_sql": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
    },
    {
        "original_nl": "List the names of the top 5 oldest people.",
        "generalized_nl": "list [List]|the|{COLUMN} [names]|of|the|top|{VALUE} [5]|old [oldest]|{TABLE} [people]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "top",
            "{VALUE}",
            "old",
            "{TABLE}"
        ],
        "original_sql": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
    },
    {
        "original_nl": "What are the names of the five oldest people?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|the|{NUMBER} [five]|old [oldest]|{TABLE} [people]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{NUMBER}",
            "old",
            "{TABLE}"
        ],
        "original_sql": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
    },
    {
        "original_nl": "What is the total point count of the youngest gymnast?",
        "generalized_nl": "What|is|the|{COLUMN} [total point]|count|of|the|young [youngest]|{TABLE} [gymnast]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "{COLUMN}",
            "count",
            "of",
            "the",
            "young",
            "{TABLE}"
        ],
        "original_sql": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
    },
    {
        "original_nl": "Return the total points of the gymnast with the lowest age.",
        "generalized_nl": "return [Return]|the|{COLUMN} [total points]|of|the|{TABLE} [gymnast]|with|the|low [lowest]|{COLUMN} [age]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "with",
            "the",
            "low",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
    },
    {
        "original_nl": "What is the average age of all gymnasts?",
        "generalized_nl": "What|is|the|average|{COLUMN} [age]|of|all|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "average",
            "{COLUMN}",
            "of",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "original_nl": "Return the average age across all gymnasts.",
        "generalized_nl": "return [Return]|the|average|{COLUMN} [age]|across|all|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "return",
            "the",
            "average",
            "{COLUMN}",
            "across",
            "all",
            "{TABLE}"
        ],
        "original_sql": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "original_nl": "What are the distinct hometowns of gymnasts with total points more than 57.5?",
        "generalized_nl": "What|are|the|distinct|{COLUMN} [hometowns]|of|{TABLE} [gymnasts]|with|{COLUMN} [total points]|{NUMBER} [more than 57.5]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "with",
            "{COLUMN}",
            "{NUMBER}"
        ],
        "original_sql": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
    },
    {
        "original_nl": "Give the different hometowns of gymnasts that have a total point score of above 57.5.",
        "generalized_nl": "give [Give]|the|different|{COLUMN} [hometowns]|of|{TABLE} [gymnasts]|that|have|a|{COLUMN} [total point]|score|of|above|{NUMBER} [57.5]",
        "generalized_tokens": [
            "give",
            "the",
            "different",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "that",
            "have",
            "a",
            "{COLUMN}",
            "score",
            "of",
            "above",
            "{NUMBER}"
        ],
        "original_sql": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
    },
    {
        "original_nl": "What are the hometowns of gymnasts and the corresponding number of gymnasts?",
        "generalized_nl": "What|are|the|{COLUMN} [hometowns]|of|{TABLE} [gymnasts]|and|the|match [corresponding]|number|of|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "and",
            "the",
            "match",
            "number",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
    },
    {
        "original_nl": "How many gymnasts are from each hometown?",
        "generalized_nl": "How|many|{TABLE} [gymnasts]|are|from|each|{COLUMN} [hometown]",
        "generalized_tokens": [
            "How",
            "many",
            "{TABLE}",
            "are",
            "from",
            "each",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
    },
    {
        "original_nl": "What is the most common hometown of gymnasts?",
        "generalized_nl": "What|is|the|most|common|{COLUMN} [hometown]|of|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "What",
            "is",
            "the",
            "most",
            "common",
            "{COLUMN}",
            "of",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "original_nl": "Return the hometown that is most common among gymnasts.",
        "generalized_nl": "return [Return]|the|{COLUMN} [hometown]|that|is|most|common|among|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "return",
            "the",
            "{COLUMN}",
            "that",
            "is",
            "most",
            "common",
            "among",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "original_nl": "What are the hometowns that are shared by at least two gymnasts?",
        "generalized_nl": "What|are|the|{COLUMN} [hometowns]|that|are|share [shared]|by|{NUMBER} [at least two]|{TABLE} [gymnasts]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "that",
            "are",
            "share",
            "by",
            "{NUMBER}",
            "{TABLE}"
        ],
        "original_sql": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "original_nl": "Give the hometowns from which two or more gymnasts are from.",
        "generalized_nl": "give [Give]|the|{COLUMN} [hometowns]|from|which|{NUMBER} [two]|or|more|{TABLE} [gymnasts]|are|from",
        "generalized_tokens": [
            "give",
            "the",
            "{COLUMN}",
            "from",
            "which",
            "{NUMBER}",
            "or",
            "more",
            "{TABLE}",
            "are",
            "from"
        ],
        "original_sql": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "original_nl": "List the names of gymnasts in ascending order by their heights.",
        "generalized_nl": "list [List]|the|{COLUMN} [names]|of|{TABLE} [gymnasts]|in|ascend [ascending]|order|by|their|{COLUMN} [heights]",
        "generalized_tokens": [
            "list",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "in",
            "ascend",
            "order",
            "by",
            "their",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
    },
    {
        "original_nl": "What are the names of gymnasts, ordered by their heights ascending?",
        "generalized_nl": "What|are|the|{COLUMN} [names]|of|{TABLE} [gymnasts]|order [ordered]|by|their|{COLUMN} [heights]|ascend [ascending]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "order",
            "by",
            "their",
            "{COLUMN}",
            "ascend"
        ],
        "original_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
    },
    {
        "original_nl": "List the distinct hometowns that are not associated with any gymnast.",
        "generalized_nl": "list [List]|the|distinct|{COLUMN} [hometowns]|that|are|not|associate [associated]|with|any|{TABLE} [gymnast]",
        "generalized_tokens": [
            "list",
            "the",
            "distinct",
            "{COLUMN}",
            "that",
            "are",
            "not",
            "associate",
            "with",
            "any",
            "{TABLE}"
        ],
        "original_sql": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "original_nl": "From which hometowns did no gymnasts come from?",
        "generalized_nl": "From|which|{COLUMN} [hometowns]|did|no|{TABLE} [gymnasts]|come|from",
        "generalized_tokens": [
            "From",
            "which",
            "{COLUMN}",
            "did",
            "no",
            "{TABLE}",
            "come",
            "from"
        ],
        "original_sql": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "original_nl": "Show the hometowns shared by people older than 23 and younger than 20.",
        "generalized_nl": "show [Show]|the|{COLUMN} [hometowns]|share [shared]|by|{TABLE} [people]|old [older]|than|{VALUE} [23]|and|young [younger]|than|{VALUE} [20]",
        "generalized_tokens": [
            "show",
            "the",
            "{COLUMN}",
            "share",
            "by",
            "{TABLE}",
            "old",
            "than",
            "{VALUE}",
            "and",
            "young",
            "than",
            "{VALUE}"
        ],
        "original_sql": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
    },
    {
        "original_nl": "From which hometowns did both people older than 23 and younger than 20 come from?",
        "generalized_nl": "From|which|{COLUMN} [hometowns]|do [did]|both|{TABLE} [people]|old [older]|than|{VALUE} [23]|and|{NE} [younger than 20]|come|from",
        "generalized_tokens": [
            "From",
            "which",
            "{COLUMN}",
            "do",
            "both",
            "{TABLE}",
            "old",
            "than",
            "{VALUE}",
            "and",
            "{NE}",
            "come",
            "from"
        ],
        "original_sql": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
    },
    {
        "original_nl": "How many distinct hometowns did these people have?",
        "generalized_nl": "How|many|distinct|{COLUMN} [hometowns]|did|these|{TABLE} [people]|have",
        "generalized_tokens": [
            "How",
            "many",
            "distinct",
            "{COLUMN}",
            "did",
            "these",
            "{TABLE}",
            "have"
        ],
        "original_sql": "SELECT count(DISTINCT Hometown) FROM people"
    },
    {
        "original_nl": "Count the number of different hometowns of these people.",
        "generalized_nl": "count [Count]|the|number|of|different|{COLUMN} [hometowns]|of|these|{TABLE} [people]",
        "generalized_tokens": [
            "count",
            "the",
            "number",
            "of",
            "different",
            "{COLUMN}",
            "of",
            "these",
            "{TABLE}"
        ],
        "original_sql": "SELECT count(DISTINCT Hometown) FROM people"
    },
    {
        "original_nl": "Show the ages of gymnasts in descending order of total points.",
        "generalized_nl": "show [Show]|the|{COLUMN} [ages]|of|{TABLE} [gymnasts]|in|descend [descending]|order|of|{COLUMN} [total points]",
        "generalized_tokens": [
            "show",
            "the",
            "{COLUMN}",
            "of",
            "{TABLE}",
            "in",
            "descend",
            "order",
            "of",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
    },
    {
        "original_nl": "What are the ages of the gymnasts, ordered descending by their total points?",
        "generalized_nl": "What|are|the|{COLUMN} [ages]|of|the|{TABLE} [gymnasts]|order [ordered]|descend [descending]|by|their|{COLUMN} [total points]",
        "generalized_tokens": [
            "What",
            "are",
            "the",
            "{COLUMN}",
            "of",
            "the",
            "{TABLE}",
            "order",
            "descend",
            "by",
            "their",
            "{COLUMN}"
        ],
        "original_sql": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
    }
]